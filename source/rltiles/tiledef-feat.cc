// This file has been automatically generated.

#include "tiledef-feat.h"

#include <string>
#include <cstring>
#include <cassert>
using namespace std;

unsigned int _tile_feat_count[TILE_FEAT_MAX - TILE_WALL_MAX] =
{
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    3,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    1,
    1,
    1,
    16,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    3,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    3,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    1,
    1,
    1,
    2,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    11,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    1,
    1,
    5,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
};

unsigned int tile_feat_count(tileidx_t idx)
{
    assert(idx >= TILE_WALL_MAX && idx < TILE_FEAT_MAX);
    return _tile_feat_count[idx - TILE_WALL_MAX];
}

tileidx_t _tile_feat_basetiles[TILE_FEAT_MAX - TILE_WALL_MAX] =
{
    0,
    0,
    2,
    2,
    4,
    4,
    6,
    6,
    8,
    8,
    10,
    10,
    10,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    22,
    24,
    25,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    26,
    42,
    43,
    44,
    44,
    44,
    47,
    48,
    49,
    50,
    51,
    52,
    53,
    54,
    55,
    56,
    57,
    58,
    59,
    60,
    61,
    62,
    63,
    64,
    65,
    66,
    67,
    68,
    69,
    70,
    71,
    72,
    73,
    74,
    75,
    76,
    77,
    78,
    79,
    80,
    81,
    82,
    83,
    84,
    85,
    86,
    87,
    88,
    89,
    89,
    89,
    89,
    93,
    93,
    95,
    95,
    97,
    97,
    99,
    99,
    101,
    101,
    103,
    103,
    105,
    105,
    107,
    108,
    109,
    110,
    111,
    112,
    113,
    114,
    115,
    116,
    117,
    118,
    119,
    120,
    120,
    120,
    120,
    120,
    120,
    120,
    120,
    120,
    129,
    129,
    129,
    129,
    133,
    133,
    133,
    136,
    137,
    138,
    139,
    140,
    141,
    142,
    143,
    144,
    145,
    146,
    147,
    148,
    149,
    150,
    151,
    152,
    153,
    154,
    155,
    156,
    157,
    158,
    159,
    160,
    161,
    161,
    163,
    164,
    165,
    166,
    167,
    168,
    169,
    170,
    171,
    172,
    173,
    174,
    174,
    176,
    177,
    178,
    178,
    180,
    181,
    182,
    183,
    184,
    185,
    186,
    186,
    186,
    186,
    186,
    186,
    186,
    186,
    186,
    195,
    196,
    197,
    198,
    199,
    200,
    201,
    202,
    203,
    204,
    205,
    206,
    207,
    208,
    209,
    210,
    210,
    210,
    210,
    210,
    210,
    210,
    210,
    218,
    219,
    220,
    220,
    220,
    220,
    220,
    220,
    220,
    220,
    228,
    229,
    230,
    231,
    232,
    233,
    234,
    234,
    234,
    234,
    234,
    234,
    234,
    234,
    234,
    234,
    234,
    245,
    246,
    246,
    246,
    246,
    246,
    246,
    246,
    246,
    254,
    255,
    255,
    257,
    257,
    259,
    259,
    261,
    262,
    263,
    263,
    263,
    263,
    263,
    268,
    268,
    268,
    268,
    268,
    268,
    268,
    268,
    276,
    276,
    276,
    276,
    276,
    276,
    276,
    276,
    284,
    284,
    284,
    284,
    284,
    284,
    284,
    284,
    292,
    292,
    292,
    292,
    292,
    292,
    292,
    292,
    300,
    301,
    302,
    303,
    304,
    305,
    306,
    307,
    308,
    308,
    308,
    308,
    312,
    312,
    312,
    312,
    316,
    317,
    318,
    319,
    320,
    321,
    322,
    323,
    324,
};

tileidx_t tile_feat_basetile(tileidx_t idx)
{
    assert(idx >= TILE_WALL_MAX && idx < TILE_FEAT_MAX);
    return _tile_feat_basetiles[idx - TILE_WALL_MAX];
}

int _tile_feat_probs[TILE_FEAT_MAX - TILE_WALL_MAX] =
{
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    10,
    18,
    23,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    10,
    5,
    5,
    5,
    8,
    10,
    15,
    18,
    26,
    34,
    42,
    50,
    58,
    63,
    68,
    73,
    76,
    79,
    80,
    1,
    1,
    1,
    2,
    3,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    3,
    4,
    3,
    4,
    2,
    3,
    3,
    4,
    1,
    2,
    2,
    3,
    3,
    4,
    1,
    2,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    6,
    10,
    11,
    12,
    16,
    18,
    22,
    24,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    1,
    1,
    1,
    2,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    1,
    1,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    1,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    1,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    1,
    1,
    2,
    3,
    4,
    5,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
};

int tile_feat_probs(tileidx_t idx)
{
    assert(idx >= TILE_WALL_MAX && idx < TILE_FEAT_MAX);
    return _tile_feat_probs[idx - TILE_WALL_MAX];
}

const char *_tile_feat_name[TILE_FEAT_MAX - TILE_WALL_MAX] =
{
    "DNGN_TREE",
    "DNGN_TREE_1",
    "DNGN_TREE_YELLOW",
    "DNGN_TREE_YELLOW_1",
    "DNGN_TREE_LIGHTRED",
    "DNGN_TREE_LIGHTRED_1",
    "DNGN_TREE_RED",
    "DNGN_TREE_RED_1",
    "DNGN_TREE_DEAD",
    "DNGN_TREE_DEAD_1",
    "DNGN_SWAMP_TREE",
    "DNGN_SWAMP_TREE_1",
    "DNGN_SWAMP_TREE_2",
    "DNGN_DETECTED_SECRET_DOOR",
    "DNGN_CLOSED_DOOR",
    "DNGN_GATE_CLOSED_LEFT",
    "DNGN_GATE_CLOSED_MIDDLE",
    "DNGN_GATE_CLOSED_RIGHT",
    "DNGN_OPEN_DOOR",
    "DNGN_GATE_OPEN_LEFT",
    "DNGN_GATE_OPEN_MIDDLE",
    "DNGN_GATE_OPEN_RIGHT",
    "DNGN_FLESHY_ORIFICE",
    "DNGN_FLESHY_ORIFICE_1",
    "DNGN_STONE_ARCH",
    "DNGN_ORCISH_IDOL",
    "DNGN_GRANITE_STATUE",
    "DNGN_GRANITE_STATUE_1",
    "DNGN_GRANITE_STATUE_2",
    "DNGN_STATUE_CENTAUR",
    "DNGN_STATUE_CENTAUR_1",
    "DNGN_STATUE_MERMAID",
    "DNGN_STATUE_NAGA",
    "DNGN_STATUE_DRAGON",
    "DNGN_STATUE_DRAGON_1",
    "DNGN_STATUE_DRAGON_2",
    "DNGN_STATUE_DRAGON_3",
    "DNGN_STATUE_TROLL",
    "DNGN_STATUE_CAT",
    "DNGN_STATUE_SKULL",
    "DNGN_STATUE_ELEPHANT",
    "DNGN_STATUE_ANCIENT_HERO",
    "DNGN_CRUMBLED_COLUMN",
    "DNGN_GRANITE_STUMP",
    "DNGN_GRAVESTONE",
    "DNGN_GRAVESTONE_1",
    "DNGN_GRAVESTONE_2",
    "DNGN_GRAVESTONE_ORNATE",
    "DNGN_MACHINE_TUKIMA",
    "DNGN_THE_TELEPORTER_VAULTS",
    "DNGN_THE_TELEPORTER_ICE_CAVE",
    "PLACEHOLDER1",
    "PLACEHOLDER2",
    "PLACEHOLDER3",
    "PLACEHOLDER4",
    "PLACEHOLDER5",
    "PLACEHOLDER6",
    "PLACEHOLDER7",
    "PLACEHOLDER8",
    "DNGN_TRAP_DART",
    "DNGN_TRAP_ARROW",
    "DNGN_TRAP_NEEDLE",
    "DNGN_TRAP_BOLT",
    "DNGN_TRAP_SPEAR",
    "DNGN_TRAP_AXE",
    "DNGN_TRAP_BLADE",
    "DNGN_TRAP_NET",
    "DNGN_TRAP_ALARM",
    "DNGN_TRAP_SHAFT",
    "DNGN_TRAP_TELEPORT",
    "DNGN_TRAP_ZOT",
    "DNGN_TRAP_PLATE",
    "DNGN_EXIT_DUNGEON",
    "DNGN_STONE_STAIRS_DOWN",
    "DNGN_STONE_STAIRS_UP",
    "DNGN_ESCAPE_HATCH_DOWN",
    "DNGN_ESCAPE_HATCH_UP",
    "DNGN_ENTER",
    "DNGN_RETURN",
    "SHOP_GENERAL",
    "SHOP_WEAPONS",
    "SHOP_ARMOUR",
    "SHOP_FOOD",
    "SHOP_BOOKS",
    "SHOP_SCROLLS",
    "SHOP_WANDS",
    "SHOP_JEWELLERY",
    "SHOP_POTIONS",
    "DNGN_ABANDONED_SHOP",
    "DNGN_LAVA",
    "DNGN_LAVA_1",
    "DNGN_LAVA_2",
    "DNGN_LAVA_3",
    "DNGN_OPEN_SEA",
    "DNGN_OPEN_SEA_1",
    "DNGN_DEEP_WATER",
    "DNGN_DEEP_WATER_1",
    "DNGN_SHALLOW_WATER",
    "DNGN_SHALLOW_WATER_1",
    "DNGN_SHALLOW_WATER_DISTURBANCE",
    "DNGN_SHALLOW_WATER_DISTURBANCE_1",
    "DNGN_DEEP_WATER_MURKY",
    "DNGN_DEEP_WATER_MURKY_1",
    "DNGN_SHALLOW_WATER_MURKY",
    "DNGN_SHALLOW_WATER_MURKY_1",
    "DNGN_SHALLOW_WATER_MURKY_DISTURBANCE",
    "DNGN_SHALLOW_WATER_MURKY_DISTURBANCE_1",
    "SHORE_N",
    "SHORE_W",
    "SHORE_E",
    "SHORE_NW",
    "SHORE_NE",
    "DNGN_WAVE_N",
    "DNGN_WAVE_NE",
    "DNGN_WAVE_E",
    "DNGN_WAVE_SE",
    "DNGN_WAVE_S",
    "DNGN_WAVE_SW",
    "DNGN_WAVE_W",
    "DNGN_WAVE_NW",
    "SHOALS_DEEP_WATER",
    "SHOALS_DEEP_WATER_1",
    "SHOALS_DEEP_WATER_2",
    "SHOALS_DEEP_WATER_3",
    "SHOALS_DEEP_WATER_4",
    "SHOALS_DEEP_WATER_5",
    "SHOALS_DEEP_WATER_6",
    "SHOALS_DEEP_WATER_7",
    "SHOALS_DEEP_WATER_8",
    "SHOALS_SHALLOW_WATER",
    "SHOALS_SHALLOW_WATER_1",
    "SHOALS_SHALLOW_WATER_2",
    "SHOALS_SHALLOW_WATER_3",
    "SHOALS_SHALLOW_WATER_DISTURBANCE",
    "SHOALS_SHALLOW_WATER_DISTURBANCE_1",
    "SHOALS_SHALLOW_WATER_DISTURBANCE_2",
    "WAVE_DEEP_CORNER_NE",
    "WAVE_DEEP_CORNER_NW",
    "WAVE_DEEP_CORNER_SE",
    "WAVE_DEEP_CORNER_SW",
    "WAVE_DEEP_N",
    "WAVE_DEEP_S",
    "WAVE_DEEP_E",
    "WAVE_DEEP_W",
    "WAVE_CORNER_NE",
    "WAVE_CORNER_NW",
    "WAVE_CORNER_SE",
    "WAVE_CORNER_SW",
    "WAVE_N",
    "WAVE_S",
    "WAVE_E",
    "WAVE_W",
    "WAVE_INK_CORNER_NE",
    "WAVE_INK_CORNER_NW",
    "WAVE_INK_CORNER_SE",
    "WAVE_INK_CORNER_SW",
    "WAVE_INK_N",
    "WAVE_INK_S",
    "WAVE_INK_E",
    "WAVE_INK_W",
    "WAVE_INK_FULL",
    "LIQUEFACTION",
    "LIQUEFACTION_1",
    "DNGN_UNSEEN_ENTRANCE",
    "DNGN_ENTER_HELL",
    "DNGN_ENTER_ZOT_CLOSED",
    "DNGN_ENTER_ZOT_OPEN",
    "DNGN_RETURN_ZOT",
    "DNGN_ENTER_DIS",
    "DNGN_ENTER_GEHENNA",
    "DNGN_ENTER_COCYTUS",
    "DNGN_ENTER_TARTARUS",
    "DNGN_RETURN_HELL",
    "DNGN_ENTER_ABYSS",
    "DNGN_EXIT_ABYSS",
    "DNGN_EXIT_ABYSS_1",
    "DNGN_ENTER_LABYRINTH",
    "DNGN_ENTER_PANDEMONIUM",
    "DNGN_PORTAL",
    "DNGN_PORTAL_1",
    "DNGN_STARRY_PORTAL",
    "DNGN_TRANSIT_PANDEMONIUM",
    "DNGN_PORTAL_VOLCANO",
    "DNGN_PORTAL_SEWER",
    "DNGN_PORTAL_SEWER_RUSTED",
    "DNGN_PORTAL_ICE_CAVE",
    "DNGN_PORTAL_WIZARD_LAB",
    "DNGN_PORTAL_WIZARD_LAB_1",
    "DNGN_PORTAL_WIZARD_LAB_2",
    "DNGN_PORTAL_WIZARD_LAB_3",
    "DNGN_PORTAL_WIZARD_LAB_4",
    "DNGN_PORTAL_WIZARD_LAB_5",
    "DNGN_PORTAL_WIZARD_LAB_6",
    "DNGN_PORTAL_WIZARD_LAB_7",
    "DNGN_PORTAL_WIZARD_LAB_8",
    "PLACEHOLDER9",
    "PLACEHOLDER10",
    "PLACEHOLDER11",
    "PLACEHOLDER12",
    "PLACEHOLDER13",
    "PLACEHOLDER14",
    "PLACEHOLDER15",
    "PLACEHOLDER16",
    "PLACEHOLDER17",
    "PLACEHOLDER18",
    "DNGN_UNSEEN_ALTAR",
    "DNGN_ALTAR_ZIN",
    "DNGN_ALTAR_SHINING_ONE",
    "DNGN_ALTAR_KIKUBAAQUDGHA",
    "DNGN_ALTAR_YREDELEMNUL",
    "DNGN_ALTAR_XOM",
    "DNGN_ALTAR_XOM_1",
    "DNGN_ALTAR_XOM_2",
    "DNGN_ALTAR_XOM_3",
    "DNGN_ALTAR_XOM_4",
    "DNGN_ALTAR_XOM_5",
    "DNGN_ALTAR_XOM_6",
    "DNGN_ALTAR_XOM_7",
    "DNGN_ALTAR_VEHUMET",
    "DNGN_ALTAR_OKAWARU",
    "DNGN_ALTAR_MAKHLEB",
    "DNGN_ALTAR_MAKHLEB_1",
    "DNGN_ALTAR_MAKHLEB_2",
    "DNGN_ALTAR_MAKHLEB_3",
    "DNGN_ALTAR_MAKHLEB_4",
    "DNGN_ALTAR_MAKHLEB_5",
    "DNGN_ALTAR_MAKHLEB_6",
    "DNGN_ALTAR_MAKHLEB_7",
    "DNGN_ALTAR_SIF_MUNA",
    "DNGN_ALTAR_TROG",
    "DNGN_ALTAR_NEMELEX_XOBEH",
    "DNGN_ALTAR_ELYVILON",
    "DNGN_ALTAR_LUGONU",
    "DNGN_ALTAR_BEOGH",
    "DNGN_ALTAR_JIYVA",
    "DNGN_ALTAR_JIYVA_1",
    "DNGN_ALTAR_JIYVA_2",
    "DNGN_ALTAR_JIYVA_3",
    "DNGN_ALTAR_JIYVA_4",
    "DNGN_ALTAR_JIYVA_5",
    "DNGN_ALTAR_JIYVA_6",
    "DNGN_ALTAR_JIYVA_7",
    "DNGN_ALTAR_JIYVA_8",
    "DNGN_ALTAR_JIYVA_9",
    "DNGN_ALTAR_JIYVA_10",
    "DNGN_ALTAR_FEDHAS",
    "DNGN_ALTAR_CHEIBRIADOS",
    "DNGN_ALTAR_CHEIBRIADOS_1",
    "DNGN_ALTAR_CHEIBRIADOS_2",
    "DNGN_ALTAR_CHEIBRIADOS_3",
    "DNGN_ALTAR_CHEIBRIADOS_4",
    "DNGN_ALTAR_CHEIBRIADOS_5",
    "DNGN_ALTAR_CHEIBRIADOS_6",
    "DNGN_ALTAR_CHEIBRIADOS_7",
    "DNGN_ALTAR_ASHENZARI",
    "DNGN_FOUNTAIN",
    "DNGN_FOUNTAIN_1",
    "DNGN_SPARKLING_FOUNTAIN",
    "DNGN_SPARKLING_FOUNTAIN_1",
    "DNGN_BLOOD_FOUNTAIN",
    "DNGN_BLOOD_FOUNTAIN_1",
    "DNGN_DRY_FOUNTAIN",
    "DNGN_DRY_FOUNTAIN_WHITE",
    "BLOOD",
    "BLOOD_1",
    "BLOOD_2",
    "BLOOD_3",
    "BLOOD_4",
    "WALL_BLOOD_S",
    "WALL_BLOOD_S_1",
    "WALL_BLOOD_S_2",
    "WALL_BLOOD_S_3",
    "WALL_BLOOD_S_4",
    "WALL_BLOOD_S_5",
    "WALL_BLOOD_S_6",
    "WALL_BLOOD_S_7",
    "WALL_BLOOD_W",
    "WALL_BLOOD_W_1",
    "WALL_BLOOD_W_2",
    "WALL_BLOOD_W_3",
    "WALL_BLOOD_W_4",
    "WALL_BLOOD_W_5",
    "WALL_BLOOD_W_6",
    "WALL_BLOOD_W_7",
    "WALL_BLOOD_N",
    "WALL_BLOOD_N_1",
    "WALL_BLOOD_N_2",
    "WALL_BLOOD_N_3",
    "WALL_BLOOD_N_4",
    "WALL_BLOOD_N_5",
    "WALL_BLOOD_N_6",
    "WALL_BLOOD_N_7",
    "WALL_BLOOD_E",
    "WALL_BLOOD_E_1",
    "WALL_BLOOD_E_2",
    "WALL_BLOOD_E_3",
    "WALL_BLOOD_E_4",
    "WALL_BLOOD_E_5",
    "WALL_BLOOD_E_6",
    "WALL_BLOOD_E_7",
    "HALO",
    "HALO_RANGE",
    "RAY",
    "RAY_OUT_OF_RANGE",
    "TRAVEL_EXCLUSION_BG",
    "TRAVEL_EXCLUSION_CENTRE_BG",
    "ITEM_SLOT",
    "SANCTUARY",
    "MOLD",
    "MOLD_1",
    "MOLD_2",
    "MOLD_3",
    "GLOWING_MOLD",
    "GLOWING_MOLD_1",
    "GLOWING_MOLD_2",
    "GLOWING_MOLD_3",
    "SILENCED",
    "KRAKEN_OVERLAY_NW",
    "KRAKEN_OVERLAY_NE",
    "KRAKEN_OVERLAY_SE",
    "KRAKEN_OVERLAY_SW",
    "ELDRITCH_OVERLAY_NW",
    "ELDRITCH_OVERLAY_NE",
    "ELDRITCH_OVERLAY_SE",
    "ELDRITCH_OVERLAY_SW",
};

const char *tile_feat_name(tileidx_t idx)
{
    assert(idx >= TILE_WALL_MAX && idx < TILE_FEAT_MAX);
    return _tile_feat_name[idx - TILE_WALL_MAX];
}

tile_info _tile_feat_info[TILE_FEAT_MAX - TILE_WALL_MAX] =
{
    tile_info(32, 32, 3, 0, 0, 0, 29, 32),
    tile_info(32, 32, 3, 0, 29, 0, 58, 32),
    tile_info(32, 32, 3, 0, 58, 0, 87, 32),
    tile_info(32, 32, 3, 0, 87, 0, 116, 32),
    tile_info(32, 32, 3, 0, 116, 0, 145, 32),
    tile_info(32, 32, 3, 0, 145, 0, 174, 32),
    tile_info(32, 32, 3, 0, 174, 0, 203, 32),
    tile_info(32, 32, 3, 0, 203, 0, 232, 32),
    tile_info(32, 32, 4, 3, 232, 0, 258, 29),
    tile_info(32, 32, 2, 0, 258, 0, 288, 32),
    tile_info(32, 32, 1, 0, 288, 0, 318, 32),
    tile_info(32, 32, 1, 1, 318, 0, 348, 31),
    tile_info(32, 32, 0, 0, 348, 0, 380, 32),
    tile_info(32, 32, 0, 0, 380, 0, 412, 32),
    tile_info(32, 32, 0, 0, 412, 0, 444, 32),
    tile_info(32, 32, 0, 0, 444, 0, 476, 32),
    tile_info(32, 32, 0, 0, 476, 0, 508, 32),
    tile_info(32, 32, 0, 0, 508, 0, 540, 32),
    tile_info(32, 32, 0, 0, 540, 0, 572, 32),
    tile_info(32, 32, 0, 0, 572, 0, 604, 32),
    tile_info(32, 32, 0, 0, 604, 0, 636, 8),
    tile_info(32, 32, 0, 0, 636, 0, 668, 32),
    tile_info(32, 32, 0, 0, 668, 0, 700, 32),
    tile_info(32, 32, 0, 0, 700, 0, 732, 32),
    tile_info(32, 32, 0, 0, 732, 0, 764, 32),
    tile_info(32, 32, 3, 2, 764, 0, 792, 30),
    tile_info(32, 32, 4, 0, 792, 0, 820, 32),
    tile_info(32, 32, 5, 0, 820, 0, 847, 32),
    tile_info(32, 32, 2, 2, 847, 0, 877, 30),
    tile_info(32, 32, 3, 0, 877, 0, 905, 32),
    tile_info(32, 32, 4, 0, 905, 0, 931, 32),
    tile_info(32, 32, 0, 0, 931, 0, 962, 32),
    tile_info(32, 32, 4, 1, 962, 0, 989, 31),
    tile_info(32, 32, 0, 0, 989, 0, 1021, 32),
    tile_info(32, 32, 4, 1, 0, 32, 27, 63),
    tile_info(32, 32, 4, 2, 27, 32, 54, 62),
    tile_info(32, 32, 4, 6, 54, 32, 81, 58),
    tile_info(32, 32, 0, 0, 81, 32, 112, 64),
    tile_info(32, 32, 4, 9, 112, 32, 139, 55),
    tile_info(32, 32, 4, 3, 139, 32, 166, 61),
    tile_info(32, 32, 0, 0, 166, 32, 198, 64),
    tile_info(32, 32, 4, 2, 198, 32, 225, 62),
    tile_info(32, 32, 4, 5, 225, 32, 252, 59),
    tile_info(32, 32, 4, 14, 252, 32, 279, 50),
    tile_info(32, 32, 0, 3, 279, 32, 311, 61),
    tile_info(32, 32, 0, 3, 311, 32, 343, 61),
    tile_info(32, 32, 0, 3, 343, 32, 375, 61),
    tile_info(32, 32, 0, 1, 375, 32, 407, 63),
    tile_info(32, 32, 0, 0, 407, 32, 439, 64),
    tile_info(32, 32, 0, 0, 439, 32, 471, 64),
    tile_info(32, 32, 0, 0, 471, 32, 503, 64),
    tile_info(32, 32, 6, 6, 503, 32, 524, 55),
    tile_info(32, 32, 6, 6, 524, 32, 545, 55),
    tile_info(32, 32, 6, 6, 545, 32, 566, 55),
    tile_info(32, 32, 6, 6, 566, 32, 587, 55),
    tile_info(32, 32, 6, 6, 587, 32, 608, 55),
    tile_info(32, 32, 6, 6, 608, 32, 629, 55),
    tile_info(32, 32, 6, 6, 629, 32, 650, 55),
    tile_info(32, 32, 6, 6, 650, 32, 671, 55),
    tile_info(32, 32, 1, 9, 671, 32, 701, 53),
    tile_info(32, 32, 1, 8, 701, 32, 731, 54),
    tile_info(32, 32, 1, 9, 731, 32, 761, 53),
    tile_info(32, 32, 1, 9, 761, 32, 791, 53),
    tile_info(32, 32, 1, 7, 791, 32, 821, 55),
    tile_info(32, 32, 1, 7, 821, 32, 851, 55),
    tile_info(32, 32, 1, 6, 851, 32, 881, 56),
    tile_info(32, 32, 1, 9, 881, 32, 911, 53),
    tile_info(32, 32, 1, 9, 911, 32, 941, 53),
    tile_info(32, 32, 4, 5, 941, 32, 967, 55),
    tile_info(32, 32, 0, 7, 967, 32, 999, 50),
    tile_info(32, 32, 0, 7, 0, 64, 32, 84),
    tile_info(32, 32, 1, 6, 32, 64, 62, 85),
    tile_info(32, 32, 6, 0, 62, 64, 88, 96),
    tile_info(32, 32, 0, 0, 88, 64, 120, 96),
    tile_info(32, 32, 0, 0, 120, 64, 152, 96),
    tile_info(32, 32, 0, 2, 152, 64, 182, 89),
    tile_info(32, 32, 0, 0, 182, 64, 208, 96),
    tile_info(32, 32, 0, 2, 208, 64, 240, 93),
    tile_info(32, 32, 0, 0, 240, 64, 272, 96),
    tile_info(32, 32, 0, 0, 272, 64, 304, 96),
    tile_info(32, 32, 0, 0, 304, 64, 336, 96),
    tile_info(32, 32, 0, 0, 336, 64, 368, 96),
    tile_info(32, 32, 0, 0, 368, 64, 400, 96),
    tile_info(32, 32, 0, 0, 400, 64, 432, 96),
    tile_info(32, 32, 0, 0, 432, 64, 464, 96),
    tile_info(32, 32, 0, 0, 464, 64, 496, 96),
    tile_info(32, 32, 0, 0, 496, 64, 528, 96),
    tile_info(32, 32, 0, 0, 528, 64, 560, 96),
    tile_info(32, 32, 0, 0, 560, 64, 592, 96),
    tile_info(32, 32, 0, 0, 592, 64, 624, 96),
    tile_info(32, 32, 0, 0, 624, 64, 656, 96),
    tile_info(32, 32, 0, 0, 656, 64, 688, 96),
    tile_info(32, 32, 0, 0, 688, 64, 720, 96),
    tile_info(32, 32, 0, 0, 720, 64, 752, 96),
    tile_info(32, 32, 0, 0, 752, 64, 784, 96),
    tile_info(32, 32, 0, 0, 784, 64, 816, 96),
    tile_info(32, 32, 0, 0, 816, 64, 848, 96),
    tile_info(32, 32, 0, 0, 848, 64, 880, 96),
    tile_info(32, 32, 0, 0, 880, 64, 912, 96),
    tile_info(32, 32, 0, 0, 912, 64, 944, 96),
    tile_info(32, 32, 0, 0, 944, 64, 976, 96),
    tile_info(32, 32, 0, 0, 976, 64, 1008, 96),
    tile_info(32, 32, 0, 0, 0, 96, 32, 128),
    tile_info(32, 32, 0, 0, 32, 96, 64, 128),
    tile_info(32, 32, 0, 0, 64, 96, 96, 128),
    tile_info(32, 32, 0, 0, 96, 96, 128, 128),
    tile_info(32, 32, 0, 0, 128, 96, 160, 128),
    tile_info(32, 32, 0, 0, 160, 96, 191, 100),
    tile_info(32, 32, 0, 1, 191, 96, 195, 127),
    tile_info(32, 32, 28, 1, 195, 96, 199, 127),
    tile_info(32, 32, 0, 0, 199, 96, 205, 102),
    tile_info(32, 32, 26, 0, 199, 102, 205, 107),
    tile_info(32, 32, 0, 0, 199, 107, 231, 117),
    tile_info(32, 32, 23, 0, 199, 117, 208, 126),
    tile_info(32, 32, 19, 0, 231, 96, 244, 128),
    tile_info(32, 32, 18, 26, 244, 96, 258, 102),
    tile_info(32, 32, 0, 25, 244, 102, 276, 109),
    tile_info(32, 32, 0, 25, 244, 109, 255, 116),
    tile_info(32, 32, 0, 0, 276, 96, 288, 128),
    tile_info(32, 32, 0, 0, 288, 96, 304, 106),
    tile_info(32, 32, 0, 0, 304, 96, 336, 128),
    tile_info(32, 32, 0, 0, 336, 96, 368, 128),
    tile_info(32, 32, 0, 0, 368, 96, 400, 128),
    tile_info(32, 32, 0, 0, 400, 96, 432, 128),
    tile_info(32, 32, 0, 0, 432, 96, 464, 128),
    tile_info(32, 32, 0, 0, 464, 96, 496, 128),
    tile_info(32, 32, 0, 0, 496, 96, 528, 128),
    tile_info(32, 32, 0, 0, 528, 96, 560, 128),
    tile_info(32, 32, 0, 0, 560, 96, 592, 128),
    tile_info(32, 32, 0, 0, 592, 96, 624, 128),
    tile_info(32, 32, 0, 0, 624, 96, 656, 128),
    tile_info(32, 32, 0, 0, 656, 96, 688, 128),
    tile_info(32, 32, 0, 0, 688, 96, 720, 128),
    tile_info(32, 32, 0, 0, 720, 96, 752, 128),
    tile_info(32, 32, 0, 0, 752, 96, 784, 128),
    tile_info(32, 32, 0, 0, 784, 96, 816, 128),
    tile_info(32, 32, 0, 0, 816, 96, 848, 128),
    tile_info(32, 32, 0, 0, 848, 96, 880, 128),
    tile_info(32, 32, 0, 0, 880, 96, 912, 128),
    tile_info(32, 32, 0, 0, 912, 96, 944, 128),
    tile_info(32, 32, 0, 0, 944, 96, 976, 128),
    tile_info(32, 32, 0, 0, 976, 96, 1008, 128),
    tile_info(32, 32, 0, 0, 0, 128, 32, 160),
    tile_info(32, 32, 0, 0, 32, 128, 64, 160),
    tile_info(32, 32, 0, 0, 64, 128, 96, 160),
    tile_info(32, 32, 0, 0, 96, 128, 128, 160),
    tile_info(32, 32, 0, 0, 128, 128, 160, 160),
    tile_info(32, 32, 0, 0, 160, 128, 192, 160),
    tile_info(32, 32, 0, 0, 192, 128, 224, 160),
    tile_info(32, 32, 0, 0, 224, 128, 256, 160),
    tile_info(32, 32, 0, 0, 256, 128, 288, 160),
    tile_info(32, 32, 0, 0, 288, 128, 320, 160),
    tile_info(32, 32, 0, 0, 320, 128, 352, 160),
    tile_info(32, 32, 0, 0, 352, 128, 384, 160),
    tile_info(32, 32, 0, 0, 384, 128, 416, 160),
    tile_info(32, 32, 0, 0, 416, 128, 448, 160),
    tile_info(32, 32, 0, 0, 448, 128, 480, 160),
    tile_info(32, 32, 0, 0, 480, 128, 512, 160),
    tile_info(32, 32, 0, 0, 512, 128, 544, 160),
    tile_info(32, 32, 0, 0, 544, 128, 576, 160),
    tile_info(32, 32, 0, 0, 576, 128, 608, 160),
    tile_info(32, 32, 0, 0, 608, 128, 640, 160),
    tile_info(32, 32, 0, 0, 640, 128, 672, 160),
    tile_info(32, 32, 0, 0, 672, 128, 704, 160),
    tile_info(32, 32, 0, 0, 704, 128, 736, 160),
    tile_info(32, 32, 0, 0, 736, 128, 768, 160),
    tile_info(32, 32, 0, 0, 768, 128, 800, 160),
    tile_info(32, 32, 0, 0, 800, 128, 832, 160),
    tile_info(32, 32, 0, 0, 832, 128, 864, 160),
    tile_info(32, 32, 0, 0, 864, 128, 896, 160),
    tile_info(32, 32, 0, 0, 896, 128, 928, 160),
    tile_info(32, 32, 0, 0, 928, 128, 960, 160),
    tile_info(32, 32, 0, 0, 960, 128, 992, 160),
    tile_info(32, 32, 0, 0, 992, 128, 1024, 160),
    tile_info(32, 32, 0, 0, 0, 160, 32, 192),
    tile_info(32, 32, 0, 0, 32, 160, 64, 192),
    tile_info(32, 32, 0, 0, 64, 160, 96, 192),
    tile_info(32, 32, 0, 0, 96, 160, 128, 192),
    tile_info(32, 32, 3, 2, 128, 160, 154, 189),
    tile_info(32, 32, 3, 2, 154, 160, 180, 189),
    tile_info(32, 32, 3, 2, 180, 160, 206, 189),
    tile_info(32, 32, 6, 0, 206, 160, 227, 192),
    tile_info(32, 32, 0, 0, 227, 160, 259, 192),
    tile_info(32, 32, 2, 3, 259, 160, 286, 187),
    tile_info(32, 32, 2, 3, 286, 160, 313, 187),
    tile_info(32, 32, 1, 0, 313, 160, 342, 192),
    tile_info(32, 32, 2, 0, 342, 160, 370, 192),
    tile_info(32, 32, 2, 0, 370, 160, 398, 192),
    tile_info(32, 32, 2, 0, 398, 160, 426, 192),
    tile_info(32, 32, 2, 0, 426, 160, 454, 192),
    tile_info(32, 32, 2, 0, 454, 160, 482, 192),
    tile_info(32, 32, 2, 0, 482, 160, 510, 192),
    tile_info(32, 32, 2, 0, 510, 160, 538, 192),
    tile_info(32, 32, 2, 0, 538, 160, 566, 192),
    tile_info(32, 32, 2, 0, 566, 160, 594, 192),
    tile_info(32, 32, 6, 6, 594, 160, 615, 183),
    tile_info(32, 32, 6, 6, 615, 160, 636, 183),
    tile_info(32, 32, 6, 6, 636, 160, 657, 183),
    tile_info(32, 32, 6, 6, 657, 160, 678, 183),
    tile_info(32, 32, 6, 6, 678, 160, 699, 183),
    tile_info(32, 32, 6, 6, 699, 160, 720, 183),
    tile_info(32, 32, 6, 6, 720, 160, 741, 183),
    tile_info(32, 32, 6, 6, 741, 160, 762, 183),
    tile_info(32, 32, 6, 6, 762, 160, 783, 183),
    tile_info(32, 32, 6, 6, 783, 160, 804, 183),
    tile_info(32, 32, 1, 2, 804, 160, 834, 190),
    tile_info(32, 32, 2, 0, 834, 160, 862, 192),
    tile_info(32, 32, 2, 0, 862, 160, 890, 192),
    tile_info(32, 32, 2, 3, 890, 160, 918, 189),
    tile_info(32, 32, 2, 3, 918, 160, 946, 189),
    tile_info(32, 32, 2, 2, 946, 160, 974, 190),
    tile_info(32, 32, 2, 2, 974, 160, 1002, 190),
    tile_info(32, 32, 2, 2, 0, 192, 28, 222),
    tile_info(32, 32, 2, 2, 28, 192, 56, 222),
    tile_info(32, 32, 2, 2, 56, 192, 84, 222),
    tile_info(32, 32, 2, 2, 84, 192, 112, 222),
    tile_info(32, 32, 2, 2, 112, 192, 140, 222),
    tile_info(32, 32, 2, 2, 140, 192, 168, 222),
    tile_info(32, 32, 0, 0, 168, 192, 199, 224),
    tile_info(32, 32, 2, 0, 199, 192, 227, 224),
    tile_info(32, 32, 2, 0, 227, 192, 255, 224),
    tile_info(32, 32, 2, 0, 255, 192, 283, 224),
    tile_info(32, 32, 2, 0, 283, 192, 311, 224),
    tile_info(32, 32, 2, 0, 311, 192, 339, 224),
    tile_info(32, 32, 2, 0, 339, 192, 367, 224),
    tile_info(32, 32, 2, 0, 367, 192, 395, 224),
    tile_info(32, 32, 2, 0, 395, 192, 423, 224),
    tile_info(32, 32, 2, 0, 423, 192, 451, 224),
    tile_info(32, 32, 2, 3, 451, 192, 479, 221),
    tile_info(32, 32, 2, 7, 479, 192, 507, 217),
    tile_info(32, 32, 1, 0, 507, 192, 537, 224),
    tile_info(32, 32, 2, 4, 537, 192, 565, 220),
    tile_info(32, 32, 2, 0, 565, 192, 593, 224),
    tile_info(32, 32, 1, 1, 593, 192, 623, 223),
    tile_info(32, 32, 2, 11, 623, 192, 651, 213),
    tile_info(32, 32, 2, 11, 651, 192, 679, 213),
    tile_info(32, 32, 2, 11, 679, 192, 707, 213),
    tile_info(32, 32, 2, 12, 707, 192, 735, 212),
    tile_info(32, 32, 2, 10, 735, 192, 763, 214),
    tile_info(32, 32, 2, 11, 763, 192, 791, 213),
    tile_info(32, 32, 2, 11, 791, 192, 819, 213),
    tile_info(32, 32, 2, 10, 819, 192, 847, 214),
    tile_info(32, 32, 2, 10, 847, 192, 875, 214),
    tile_info(32, 32, 2, 12, 875, 192, 903, 212),
    tile_info(32, 32, 2, 12, 903, 192, 931, 212),
    tile_info(32, 32, 0, 4, 931, 192, 962, 220),
    tile_info(32, 32, 2, 1, 962, 192, 990, 223),
    tile_info(32, 32, 2, 1, 990, 192, 1018, 223),
    tile_info(32, 32, 2, 1, 0, 224, 28, 255),
    tile_info(32, 32, 2, 1, 28, 224, 56, 255),
    tile_info(32, 32, 2, 1, 56, 224, 84, 255),
    tile_info(32, 32, 2, 1, 84, 224, 112, 255),
    tile_info(32, 32, 2, 1, 112, 224, 140, 255),
    tile_info(32, 32, 2, 1, 140, 224, 168, 255),
    tile_info(32, 32, 2, 4, 168, 224, 198, 252),
    tile_info(32, 32, 1, 0, 198, 224, 229, 256),
    tile_info(32, 32, 1, 0, 229, 224, 260, 256),
    tile_info(32, 32, 1, 0, 260, 224, 291, 256),
    tile_info(32, 32, 1, 0, 291, 224, 322, 256),
    tile_info(32, 32, 1, 0, 322, 224, 353, 256),
    tile_info(32, 32, 1, 0, 353, 224, 384, 256),
    tile_info(32, 32, 1, 0, 384, 224, 415, 256),
    tile_info(32, 32, 1, 0, 415, 224, 446, 256),
    tile_info(32, 32, 7, 4, 446, 224, 465, 246),
    tile_info(32, 32, 4, 7, 465, 224, 490, 244),
    tile_info(32, 32, 2, 4, 490, 224, 519, 248),
    tile_info(32, 32, 2, 3, 519, 224, 547, 249),
    tile_info(32, 32, 2, 3, 547, 224, 575, 249),
    tile_info(32, 32, 0, 3, 575, 224, 607, 253),
    tile_info(32, 32, 6, 5, 607, 224, 631, 251),
    tile_info(32, 32, 2, 6, 631, 224, 660, 247),
    tile_info(32, 32, 2, 0, 660, 224, 690, 256),
    tile_info(32, 32, 2, 1, 690, 224, 718, 255),
    tile_info(32, 32, 2, 0, 718, 224, 747, 256),
    tile_info(32, 32, 4, 7, 747, 224, 773, 249),
    tile_info(32, 32, 2, 0, 773, 224, 803, 256),
    tile_info(32, 32, 0, 0, 803, 224, 832, 256),
    tile_info(32, 32, 0, 6, 832, 224, 859, 248),
    tile_info(32, 32, 3, 2, 859, 224, 882, 253),
    tile_info(32, 32, 0, 2, 882, 224, 914, 254),
    tile_info(32, 32, 0, 2, 914, 224, 945, 252),
    tile_info(32, 32, 0, 2, 945, 224, 977, 253),
    tile_info(32, 32, 0, 4, 977, 224, 1002, 250),
    tile_info(32, 32, 0, 2, 0, 256, 32, 286),
    tile_info(32, 32, 0, 0, 32, 256, 64, 285),
    tile_info(32, 32, 2, 0, 64, 256, 88, 283),
    tile_info(32, 32, 1, 3, 88, 256, 117, 279),
    tile_info(32, 32, 0, 0, 117, 256, 147, 288),
    tile_info(32, 32, 2, 0, 147, 256, 175, 287),
    tile_info(32, 32, 1, 0, 175, 256, 204, 288),
    tile_info(32, 32, 2, 0, 204, 256, 230, 281),
    tile_info(32, 32, 0, 0, 230, 256, 260, 288),
    tile_info(32, 32, 3, 0, 260, 256, 289, 288),
    tile_info(32, 32, 5, 2, 289, 256, 316, 280),
    tile_info(32, 32, 6, 1, 316, 256, 339, 285),
    tile_info(32, 32, 0, 0, 339, 256, 371, 286),
    tile_info(32, 32, 1, 2, 371, 256, 402, 284),
    tile_info(32, 32, 0, 1, 402, 256, 434, 285),
    tile_info(32, 32, 7, 2, 434, 256, 459, 282),
    tile_info(32, 32, 0, 0, 459, 256, 491, 286),
    tile_info(32, 32, 0, 0, 491, 256, 523, 288),
    tile_info(32, 32, 0, 0, 523, 256, 555, 288),
    tile_info(32, 32, 0, 0, 555, 256, 587, 288),
    tile_info(32, 32, 0, 0, 587, 256, 619, 288),
    tile_info(32, 32, 0, 0, 619, 256, 651, 288),
    tile_info(32, 32, 0, 0, 651, 256, 683, 288),
    tile_info(32, 32, 0, 0, 683, 256, 715, 288),
    tile_info(32, 32, 0, 0, 715, 256, 747, 288),
    tile_info(32, 32, 5, 3, 747, 256, 770, 281),
    tile_info(32, 32, 3, 3, 770, 256, 796, 283),
    tile_info(32, 32, 4, 3, 796, 256, 820, 281),
    tile_info(32, 32, 2, 4, 820, 256, 848, 282),
    tile_info(32, 32, 4, 2, 848, 256, 874, 284),
    tile_info(32, 32, 0, 1, 874, 256, 906, 287),
    tile_info(32, 32, 2, 1, 906, 256, 935, 287),
    tile_info(32, 32, 0, 2, 935, 256, 967, 286),
    tile_info(32, 32, 0, 0, 967, 256, 999, 288),
    tile_info(32, 32, 0, 0, 0, 288, 32, 320),
    tile_info(32, 32, 0, 0, 32, 288, 64, 320),
    tile_info(32, 32, 0, 0, 64, 288, 96, 320),
    tile_info(32, 32, 0, 0, 96, 288, 128, 320),
    tile_info(32, 32, 0, 0, 128, 288, 160, 320),
    tile_info(32, 32, 0, 0, 160, 288, 192, 320),
    tile_info(32, 32, 0, 0, 192, 288, 224, 320),
    tile_info(32, 32, 0, 0, 224, 288, 256, 320),
};

tile_info &tile_feat_info(tileidx_t idx)
{
    assert(idx >= TILE_WALL_MAX && idx < TILE_FEAT_MAX);
    return _tile_feat_info[idx - TILE_WALL_MAX];
}


typedef std::pair<const char*, tileidx_t> _name_pair;

_name_pair feat_name_pairs[] =
{
    _name_pair("blood", 263 + TILE_WALL_MAX),
    _name_pair("dngn_abandoned_shop", 88 + TILE_WALL_MAX),
    _name_pair("dngn_altar_ashenzari", 254 + TILE_WALL_MAX),
    _name_pair("dngn_altar_beogh", 233 + TILE_WALL_MAX),
    _name_pair("dngn_altar_cheibriados", 246 + TILE_WALL_MAX),
    _name_pair("dngn_altar_elyvilon", 231 + TILE_WALL_MAX),
    _name_pair("dngn_altar_fedhas", 245 + TILE_WALL_MAX),
    _name_pair("dngn_altar_jiyva", 234 + TILE_WALL_MAX),
    _name_pair("dngn_altar_kikubaaqudgha", 208 + TILE_WALL_MAX),
    _name_pair("dngn_altar_lugonu", 232 + TILE_WALL_MAX),
    _name_pair("dngn_altar_makhleb", 220 + TILE_WALL_MAX),
    _name_pair("dngn_altar_nemelex_xobeh", 230 + TILE_WALL_MAX),
    _name_pair("dngn_altar_okawaru", 219 + TILE_WALL_MAX),
    _name_pair("dngn_altar_shining_one", 207 + TILE_WALL_MAX),
    _name_pair("dngn_altar_sif_muna", 228 + TILE_WALL_MAX),
    _name_pair("dngn_altar_trog", 229 + TILE_WALL_MAX),
    _name_pair("dngn_altar_vehumet", 218 + TILE_WALL_MAX),
    _name_pair("dngn_altar_xom", 210 + TILE_WALL_MAX),
    _name_pair("dngn_altar_yredelemnul", 209 + TILE_WALL_MAX),
    _name_pair("dngn_altar_zin", 206 + TILE_WALL_MAX),
    _name_pair("dngn_blood_fountain", 259 + TILE_WALL_MAX),
    _name_pair("dngn_blue_fountain", 255 + TILE_WALL_MAX),
    _name_pair("dngn_closed_door", 14 + TILE_WALL_MAX),
    _name_pair("dngn_crumbled_column", 42 + TILE_WALL_MAX),
    _name_pair("dngn_deep_water", 95 + TILE_WALL_MAX),
    _name_pair("dngn_deep_water_murky", 101 + TILE_WALL_MAX),
    _name_pair("dngn_detected_secret_door", 13 + TILE_WALL_MAX),
    _name_pair("dngn_dry_fountain", 261 + TILE_WALL_MAX),
    _name_pair("dngn_dry_fountain_white", 262 + TILE_WALL_MAX),
    _name_pair("dngn_enter", 77 + TILE_WALL_MAX),
    _name_pair("dngn_enter_abyss", 173 + TILE_WALL_MAX),
    _name_pair("dngn_enter_cocytus", 170 + TILE_WALL_MAX),
    _name_pair("dngn_enter_dis", 168 + TILE_WALL_MAX),
    _name_pair("dngn_enter_gehenna", 169 + TILE_WALL_MAX),
    _name_pair("dngn_enter_hell", 164 + TILE_WALL_MAX),
    _name_pair("dngn_enter_labyrinth", 176 + TILE_WALL_MAX),
    _name_pair("dngn_enter_pandemonium", 177 + TILE_WALL_MAX),
    _name_pair("dngn_enter_tartarus", 171 + TILE_WALL_MAX),
    _name_pair("dngn_enter_zot_closed", 165 + TILE_WALL_MAX),
    _name_pair("dngn_enter_zot_open", 166 + TILE_WALL_MAX),
    _name_pair("dngn_escape_hatch_down", 75 + TILE_WALL_MAX),
    _name_pair("dngn_escape_hatch_up", 76 + TILE_WALL_MAX),
    _name_pair("dngn_exit_abyss", 174 + TILE_WALL_MAX),
    _name_pair("dngn_exit_dungeon", 72 + TILE_WALL_MAX),
    _name_pair("dngn_fleshy_orifice", 22 + TILE_WALL_MAX),
    _name_pair("dngn_fountain", 255 + TILE_WALL_MAX),
    _name_pair("dngn_gate_closed_left", 15 + TILE_WALL_MAX),
    _name_pair("dngn_gate_closed_middle", 16 + TILE_WALL_MAX),
    _name_pair("dngn_gate_closed_right", 17 + TILE_WALL_MAX),
    _name_pair("dngn_gate_open_left", 19 + TILE_WALL_MAX),
    _name_pair("dngn_gate_open_middle", 20 + TILE_WALL_MAX),
    _name_pair("dngn_gate_open_right", 21 + TILE_WALL_MAX),
    _name_pair("dngn_granite_statue", 26 + TILE_WALL_MAX),
    _name_pair("dngn_granite_stump", 43 + TILE_WALL_MAX),
    _name_pair("dngn_gravestone", 44 + TILE_WALL_MAX),
    _name_pair("dngn_gravestone_ornate", 47 + TILE_WALL_MAX),
    _name_pair("dngn_lava", 89 + TILE_WALL_MAX),
    _name_pair("dngn_machine_tukima", 48 + TILE_WALL_MAX),
    _name_pair("dngn_open_door", 18 + TILE_WALL_MAX),
    _name_pair("dngn_open_sea", 93 + TILE_WALL_MAX),
    _name_pair("dngn_orcish_idol", 25 + TILE_WALL_MAX),
    _name_pair("dngn_portal", 178 + TILE_WALL_MAX),
    _name_pair("dngn_portal_ice_cave", 185 + TILE_WALL_MAX),
    _name_pair("dngn_portal_sewer", 183 + TILE_WALL_MAX),
    _name_pair("dngn_portal_sewer_rusted", 184 + TILE_WALL_MAX),
    _name_pair("dngn_portal_volcano", 182 + TILE_WALL_MAX),
    _name_pair("dngn_portal_wizard_lab", 186 + TILE_WALL_MAX),
    _name_pair("dngn_return", 78 + TILE_WALL_MAX),
    _name_pair("dngn_return_hell", 172 + TILE_WALL_MAX),
    _name_pair("dngn_return_zot", 167 + TILE_WALL_MAX),
    _name_pair("dngn_shallow_water", 97 + TILE_WALL_MAX),
    _name_pair("dngn_shallow_water_disturbance", 99 + TILE_WALL_MAX),
    _name_pair("dngn_shallow_water_murky", 103 + TILE_WALL_MAX),
    _name_pair("dngn_shallow_water_murky_disturbance", 105 + TILE_WALL_MAX),
    _name_pair("dngn_sparkling_fountain", 257 + TILE_WALL_MAX),
    _name_pair("dngn_starry_portal", 180 + TILE_WALL_MAX),
    _name_pair("dngn_statue_ancient_hero", 41 + TILE_WALL_MAX),
    _name_pair("dngn_statue_cat", 38 + TILE_WALL_MAX),
    _name_pair("dngn_statue_centaur", 29 + TILE_WALL_MAX),
    _name_pair("dngn_statue_dragon", 33 + TILE_WALL_MAX),
    _name_pair("dngn_statue_elephant", 40 + TILE_WALL_MAX),
    _name_pair("dngn_statue_mermaid", 31 + TILE_WALL_MAX),
    _name_pair("dngn_statue_naga", 32 + TILE_WALL_MAX),
    _name_pair("dngn_statue_skull", 39 + TILE_WALL_MAX),
    _name_pair("dngn_statue_troll", 37 + TILE_WALL_MAX),
    _name_pair("dngn_stone_arch", 24 + TILE_WALL_MAX),
    _name_pair("dngn_stone_stairs_down", 73 + TILE_WALL_MAX),
    _name_pair("dngn_stone_stairs_up", 74 + TILE_WALL_MAX),
    _name_pair("dngn_swamp_tree", 10 + TILE_WALL_MAX),
    _name_pair("dngn_the_teleporter_ice_cave", 50 + TILE_WALL_MAX),
    _name_pair("dngn_the_teleporter_vaults", 49 + TILE_WALL_MAX),
    _name_pair("dngn_transit_pandemonium", 181 + TILE_WALL_MAX),
    _name_pair("dngn_trap_alarm", 67 + TILE_WALL_MAX),
    _name_pair("dngn_trap_arrow", 60 + TILE_WALL_MAX),
    _name_pair("dngn_trap_axe", 64 + TILE_WALL_MAX),
    _name_pair("dngn_trap_blade", 65 + TILE_WALL_MAX),
    _name_pair("dngn_trap_bolt", 62 + TILE_WALL_MAX),
    _name_pair("dngn_trap_dart", 59 + TILE_WALL_MAX),
    _name_pair("dngn_trap_needle", 61 + TILE_WALL_MAX),
    _name_pair("dngn_trap_net", 66 + TILE_WALL_MAX),
    _name_pair("dngn_trap_plate", 71 + TILE_WALL_MAX),
    _name_pair("dngn_trap_shaft", 68 + TILE_WALL_MAX),
    _name_pair("dngn_trap_spear", 63 + TILE_WALL_MAX),
    _name_pair("dngn_trap_teleport", 69 + TILE_WALL_MAX),
    _name_pair("dngn_trap_zot", 70 + TILE_WALL_MAX),
    _name_pair("dngn_tree", 0 + TILE_WALL_MAX),
    _name_pair("dngn_tree_dead", 8 + TILE_WALL_MAX),
    _name_pair("dngn_tree_lightred", 4 + TILE_WALL_MAX),
    _name_pair("dngn_tree_red", 6 + TILE_WALL_MAX),
    _name_pair("dngn_tree_yellow", 2 + TILE_WALL_MAX),
    _name_pair("dngn_unseen_altar", 205 + TILE_WALL_MAX),
    _name_pair("dngn_unseen_entrance", 163 + TILE_WALL_MAX),
    _name_pair("dngn_wave_e", 114 + TILE_WALL_MAX),
    _name_pair("dngn_wave_n", 112 + TILE_WALL_MAX),
    _name_pair("dngn_wave_ne", 113 + TILE_WALL_MAX),
    _name_pair("dngn_wave_nw", 119 + TILE_WALL_MAX),
    _name_pair("dngn_wave_s", 116 + TILE_WALL_MAX),
    _name_pair("dngn_wave_se", 115 + TILE_WALL_MAX),
    _name_pair("dngn_wave_sw", 117 + TILE_WALL_MAX),
    _name_pair("dngn_wave_w", 118 + TILE_WALL_MAX),
    _name_pair("eldritch_overlay_ne", 322 + TILE_WALL_MAX),
    _name_pair("eldritch_overlay_nw", 321 + TILE_WALL_MAX),
    _name_pair("eldritch_overlay_se", 323 + TILE_WALL_MAX),
    _name_pair("eldritch_overlay_sw", 324 + TILE_WALL_MAX),
    _name_pair("glowing_mold", 312 + TILE_WALL_MAX),
    _name_pair("halo", 300 + TILE_WALL_MAX),
    _name_pair("halo_range", 301 + TILE_WALL_MAX),
    _name_pair("item_slot", 306 + TILE_WALL_MAX),
    _name_pair("kraken_overlay_ne", 318 + TILE_WALL_MAX),
    _name_pair("kraken_overlay_nw", 317 + TILE_WALL_MAX),
    _name_pair("kraken_overlay_se", 319 + TILE_WALL_MAX),
    _name_pair("kraken_overlay_sw", 320 + TILE_WALL_MAX),
    _name_pair("liquefaction", 161 + TILE_WALL_MAX),
    _name_pair("mold", 308 + TILE_WALL_MAX),
    _name_pair("placeholder1", 51 + TILE_WALL_MAX),
    _name_pair("placeholder10", 196 + TILE_WALL_MAX),
    _name_pair("placeholder11", 197 + TILE_WALL_MAX),
    _name_pair("placeholder12", 198 + TILE_WALL_MAX),
    _name_pair("placeholder13", 199 + TILE_WALL_MAX),
    _name_pair("placeholder14", 200 + TILE_WALL_MAX),
    _name_pair("placeholder15", 201 + TILE_WALL_MAX),
    _name_pair("placeholder16", 202 + TILE_WALL_MAX),
    _name_pair("placeholder17", 203 + TILE_WALL_MAX),
    _name_pair("placeholder18", 204 + TILE_WALL_MAX),
    _name_pair("placeholder2", 52 + TILE_WALL_MAX),
    _name_pair("placeholder3", 53 + TILE_WALL_MAX),
    _name_pair("placeholder4", 54 + TILE_WALL_MAX),
    _name_pair("placeholder5", 55 + TILE_WALL_MAX),
    _name_pair("placeholder6", 56 + TILE_WALL_MAX),
    _name_pair("placeholder7", 57 + TILE_WALL_MAX),
    _name_pair("placeholder8", 58 + TILE_WALL_MAX),
    _name_pair("placeholder9", 195 + TILE_WALL_MAX),
    _name_pair("ray", 302 + TILE_WALL_MAX),
    _name_pair("ray_out_of_range", 303 + TILE_WALL_MAX),
    _name_pair("sanctuary", 307 + TILE_WALL_MAX),
    _name_pair("shoals_deep_water", 120 + TILE_WALL_MAX),
    _name_pair("shoals_shallow_water", 129 + TILE_WALL_MAX),
    _name_pair("shoals_shallow_water_disturbance", 133 + TILE_WALL_MAX),
    _name_pair("shop_armour", 81 + TILE_WALL_MAX),
    _name_pair("shop_books", 83 + TILE_WALL_MAX),
    _name_pair("shop_food", 82 + TILE_WALL_MAX),
    _name_pair("shop_general", 79 + TILE_WALL_MAX),
    _name_pair("shop_jewellery", 86 + TILE_WALL_MAX),
    _name_pair("shop_potions", 87 + TILE_WALL_MAX),
    _name_pair("shop_scrolls", 84 + TILE_WALL_MAX),
    _name_pair("shop_wands", 85 + TILE_WALL_MAX),
    _name_pair("shop_weapons", 80 + TILE_WALL_MAX),
    _name_pair("shore_e", 109 + TILE_WALL_MAX),
    _name_pair("shore_n", 107 + TILE_WALL_MAX),
    _name_pair("shore_ne", 111 + TILE_WALL_MAX),
    _name_pair("shore_nw", 110 + TILE_WALL_MAX),
    _name_pair("shore_w", 108 + TILE_WALL_MAX),
    _name_pair("silenced", 316 + TILE_WALL_MAX),
    _name_pair("travel_exclusion_bg", 304 + TILE_WALL_MAX),
    _name_pair("travel_exclusion_centre_bg", 305 + TILE_WALL_MAX),
    _name_pair("wall_blood_e", 292 + TILE_WALL_MAX),
    _name_pair("wall_blood_n", 284 + TILE_WALL_MAX),
    _name_pair("wall_blood_s", 268 + TILE_WALL_MAX),
    _name_pair("wall_blood_w", 276 + TILE_WALL_MAX),
    _name_pair("wave_corner_ne", 144 + TILE_WALL_MAX),
    _name_pair("wave_corner_nw", 145 + TILE_WALL_MAX),
    _name_pair("wave_corner_se", 146 + TILE_WALL_MAX),
    _name_pair("wave_corner_sw", 147 + TILE_WALL_MAX),
    _name_pair("wave_deep_corner_ne", 136 + TILE_WALL_MAX),
    _name_pair("wave_deep_corner_nw", 137 + TILE_WALL_MAX),
    _name_pair("wave_deep_corner_se", 138 + TILE_WALL_MAX),
    _name_pair("wave_deep_corner_sw", 139 + TILE_WALL_MAX),
    _name_pair("wave_deep_e", 142 + TILE_WALL_MAX),
    _name_pair("wave_deep_n", 140 + TILE_WALL_MAX),
    _name_pair("wave_deep_s", 141 + TILE_WALL_MAX),
    _name_pair("wave_deep_w", 143 + TILE_WALL_MAX),
    _name_pair("wave_e", 150 + TILE_WALL_MAX),
    _name_pair("wave_ink_corner_ne", 152 + TILE_WALL_MAX),
    _name_pair("wave_ink_corner_nw", 153 + TILE_WALL_MAX),
    _name_pair("wave_ink_corner_se", 154 + TILE_WALL_MAX),
    _name_pair("wave_ink_corner_sw", 155 + TILE_WALL_MAX),
    _name_pair("wave_ink_e", 158 + TILE_WALL_MAX),
    _name_pair("wave_ink_full", 160 + TILE_WALL_MAX),
    _name_pair("wave_ink_n", 156 + TILE_WALL_MAX),
    _name_pair("wave_ink_s", 157 + TILE_WALL_MAX),
    _name_pair("wave_ink_w", 159 + TILE_WALL_MAX),
    _name_pair("wave_n", 148 + TILE_WALL_MAX),
    _name_pair("wave_s", 149 + TILE_WALL_MAX),
    _name_pair("wave_w", 151 + TILE_WALL_MAX),
};

bool tile_feat_index(const char *str, tileidx_t *idx)
{
    assert(str);
    if (!str)
        return false;

    string lc = str;
    for (unsigned int i = 0; i < lc.size(); i++)
        lc[i] = tolower(lc[i]);

    int num_pairs = sizeof(feat_name_pairs) / sizeof(feat_name_pairs[0]);
    bool result = binary_search<const char *, tileidx_t>(
       lc.c_str(), &feat_name_pairs[0], num_pairs, &strcmp, idx);
    return (result);
}

bool tile_feat_equal(tileidx_t tile, tileidx_t idx)
{
    assert(tile >= TILE_WALL_MAX && tile < TILE_FEAT_MAX);
    return (idx >= tile && idx < tile + tile_feat_count(tile));
}


typedef std::pair<tile_variation, tileidx_t> _colour_pair;

_colour_pair feat_colour_pairs[] =
{
    _colour_pair(tile_variation(0, 0), 0),
    _colour_pair(tile_variation(0 + TILE_WALL_MAX, 4), 6 + TILE_WALL_MAX),
    _colour_pair(tile_variation(0 + TILE_WALL_MAX, 8), 8 + TILE_WALL_MAX),
    _colour_pair(tile_variation(0 + TILE_WALL_MAX, 12), 4 + TILE_WALL_MAX),
    _colour_pair(tile_variation(0 + TILE_WALL_MAX, 14), 2 + TILE_WALL_MAX),
    _colour_pair(tile_variation(261 + TILE_WALL_MAX, 15), 262 + TILE_WALL_MAX),
};

tileidx_t tile_feat_coloured(tileidx_t idx, int col)
{
    int num_pairs = sizeof(feat_colour_pairs) / sizeof(feat_colour_pairs[0]);
    tile_variation key(idx, col);
    tileidx_t found;
    bool result = binary_search<tile_variation, tileidx_t>(
       key, &feat_colour_pairs[0], num_pairs,
       &tile_variation::cmp, &found);
    return (result ? found : idx);
}

