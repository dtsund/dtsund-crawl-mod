// This file has been automatically generated.

#include "tiledef-wall.h"

#include <string>
#include <cstring>
#include <cassert>
using namespace std;

unsigned int _tile_wall_count[TILE_WALL_MAX - TILE_FLOOR_MAX] =
{
    13,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    10,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    7,
    1,
    1,
    1,
    1,
    1,
    1,
    6,
    1,
    1,
    1,
    1,
    1,
    7,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    12,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    12,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    10,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    7,
    1,
    1,
    1,
    1,
    1,
    1,
    14,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    9,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    4,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
};

unsigned int tile_wall_count(tileidx_t idx)
{
    assert(idx >= TILE_FLOOR_MAX && idx < TILE_WALL_MAX);
    return _tile_wall_count[idx - TILE_FLOOR_MAX];
}

tileidx_t _tile_wall_basetiles[TILE_WALL_MAX - TILE_FLOOR_MAX] =
{
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    13,
    13,
    13,
    13,
    13,
    13,
    13,
    13,
    21,
    21,
    21,
    21,
    21,
    21,
    21,
    21,
    29,
    29,
    29,
    29,
    29,
    29,
    29,
    29,
    37,
    37,
    37,
    37,
    37,
    37,
    37,
    37,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    45,
    53,
    53,
    53,
    53,
    53,
    53,
    53,
    53,
    61,
    61,
    61,
    61,
    61,
    61,
    61,
    61,
    69,
    69,
    69,
    69,
    69,
    69,
    69,
    69,
    77,
    77,
    77,
    77,
    77,
    77,
    77,
    77,
    85,
    85,
    85,
    85,
    85,
    85,
    85,
    85,
    93,
    93,
    93,
    93,
    93,
    93,
    93,
    93,
    101,
    101,
    101,
    101,
    101,
    101,
    101,
    101,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    109,
    117,
    117,
    117,
    117,
    117,
    117,
    117,
    117,
    125,
    125,
    125,
    125,
    125,
    125,
    125,
    125,
    133,
    133,
    133,
    133,
    137,
    137,
    137,
    137,
    141,
    141,
    141,
    141,
    145,
    145,
    145,
    145,
    149,
    149,
    149,
    149,
    149,
    149,
    149,
    149,
    149,
    149,
    159,
    159,
    159,
    159,
    163,
    163,
    163,
    163,
    167,
    167,
    167,
    167,
    171,
    171,
    171,
    171,
    175,
    175,
    175,
    175,
    179,
    179,
    179,
    179,
    183,
    183,
    183,
    183,
    187,
    187,
    187,
    187,
    191,
    191,
    191,
    191,
    195,
    195,
    195,
    195,
    199,
    199,
    199,
    199,
    203,
    203,
    203,
    203,
    207,
    207,
    207,
    207,
    211,
    211,
    211,
    211,
    215,
    215,
    215,
    215,
    219,
    219,
    219,
    219,
    223,
    223,
    223,
    223,
    227,
    227,
    227,
    227,
    231,
    231,
    231,
    231,
    235,
    235,
    235,
    235,
    235,
    235,
    235,
    242,
    242,
    242,
    242,
    242,
    242,
    248,
    248,
    248,
    248,
    248,
    248,
    248,
    255,
    255,
    255,
    255,
    259,
    259,
    259,
    259,
    263,
    263,
    263,
    263,
    267,
    267,
    267,
    267,
    271,
    271,
    271,
    271,
    275,
    275,
    275,
    275,
    279,
    279,
    279,
    279,
    283,
    283,
    283,
    283,
    287,
    287,
    287,
    287,
    291,
    291,
    291,
    291,
    295,
    295,
    295,
    295,
    299,
    299,
    299,
    299,
    303,
    303,
    303,
    303,
    307,
    307,
    307,
    307,
    311,
    311,
    311,
    311,
    315,
    315,
    315,
    315,
    319,
    319,
    319,
    319,
    323,
    323,
    323,
    323,
    323,
    323,
    323,
    323,
    323,
    323,
    323,
    323,
    335,
    335,
    335,
    335,
    335,
    335,
    335,
    335,
    335,
    335,
    335,
    335,
    347,
    347,
    347,
    347,
    347,
    347,
    347,
    347,
    347,
    347,
    357,
    357,
    357,
    357,
    357,
    357,
    357,
    364,
    364,
    364,
    364,
    364,
    364,
    364,
    364,
    364,
    364,
    364,
    364,
    364,
    364,
    378,
    378,
    378,
    378,
    382,
    382,
    382,
    382,
    386,
    386,
    386,
    386,
    390,
    390,
    390,
    390,
    390,
    390,
    390,
    390,
    390,
    399,
    399,
    399,
    399,
    403,
    403,
    403,
    403,
    407,
    407,
    407,
    407,
    411,
    411,
    411,
    411,
    415,
    415,
    415,
    415,
    419,
    419,
    419,
    419,
    423,
    423,
    423,
    423,
    427,
    427,
    427,
    427,
    431,
    431,
    431,
    431,
    435,
    435,
    435,
    435,
    439,
    439,
    439,
    439,
    443,
    443,
    443,
    443,
    447,
    447,
    447,
    447,
    451,
    452,
    453,
    454,
    455,
    456,
    457,
    458,
    459,
    460,
    461,
    462,
    463,
    464,
    465,
    466,
    467,
    468,
    469,
    470,
    471,
    472,
    473,
    474,
    475,
    476,
    477,
    478,
    479,
    480,
    481,
    482,
    483,
    484,
    485,
    486,
    487,
    488,
    489,
    490,
    491,
    492,
    493,
};

tileidx_t tile_wall_basetile(tileidx_t idx)
{
    assert(idx >= TILE_FLOOR_MAX && idx < TILE_WALL_MAX);
    return _tile_wall_basetiles[idx - TILE_FLOOR_MAX];
}

int _tile_wall_probs[TILE_WALL_MAX - TILE_FLOOR_MAX] =
{
    35,
    70,
    105,
    140,
    143,
    144,
    149,
    152,
    155,
    156,
    157,
    158,
    159,
    5,
    10,
    15,
    20,
    25,
    27,
    29,
    30,
    5,
    10,
    15,
    20,
    25,
    27,
    29,
    30,
    5,
    10,
    15,
    20,
    25,
    27,
    29,
    30,
    5,
    10,
    15,
    20,
    25,
    27,
    29,
    30,
    5,
    10,
    15,
    20,
    25,
    27,
    29,
    30,
    5,
    10,
    15,
    20,
    25,
    27,
    29,
    30,
    5,
    10,
    15,
    20,
    25,
    27,
    29,
    30,
    5,
    10,
    15,
    20,
    25,
    27,
    29,
    30,
    5,
    10,
    15,
    20,
    25,
    27,
    29,
    30,
    5,
    10,
    15,
    20,
    25,
    27,
    29,
    30,
    5,
    10,
    15,
    20,
    25,
    27,
    29,
    30,
    5,
    10,
    15,
    20,
    25,
    27,
    29,
    30,
    5,
    10,
    15,
    20,
    25,
    27,
    29,
    30,
    5,
    10,
    15,
    20,
    25,
    27,
    29,
    30,
    5,
    10,
    15,
    20,
    25,
    27,
    29,
    30,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    2,
    4,
    6,
    8,
    9,
    10,
    11,
    2,
    4,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    2,
    4,
    6,
    8,
    10,
    12,
    14,
    16,
    18,
    20,
    21,
    22,
    5,
    10,
    15,
    20,
    25,
    28,
    31,
    34,
    35,
    36,
    37,
    38,
    5,
    10,
    15,
    20,
    25,
    26,
    27,
    28,
    29,
    30,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    5,
    8,
    14,
    16,
    20,
    24,
    28,
    32,
    34,
    36,
    38,
    40,
    43,
    44,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    1,
    2,
    3,
    4,
    10,
    20,
    30,
    40,
    10,
    20,
    30,
    40,
    10,
    20,
    30,
    40,
    10,
    20,
    30,
    40,
    10,
    20,
    30,
    40,
    10,
    20,
    30,
    40,
    10,
    20,
    30,
    40,
    10,
    20,
    30,
    40,
    10,
    20,
    30,
    40,
    10,
    20,
    30,
    40,
    10,
    20,
    30,
    40,
    10,
    20,
    30,
    40,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
    10,
};

int tile_wall_probs(tileidx_t idx)
{
    assert(idx >= TILE_FLOOR_MAX && idx < TILE_WALL_MAX);
    return _tile_wall_probs[idx - TILE_FLOOR_MAX];
}

const char *_tile_wall_name[TILE_WALL_MAX - TILE_FLOOR_MAX] =
{
    "WALL_BRICK_DARK",
    "WALL_BRICK_DARK_1",
    "WALL_BRICK_DARK_2",
    "WALL_BRICK_DARK_3",
    "WALL_BRICK_DARK_4",
    "WALL_BRICK_DARK_5",
    "WALL_BRICK_DARK_6",
    "WALL_BRICK_DARK_7",
    "WALL_BRICK_DARK_8",
    "WALL_BRICK_TORCH_START",
    "WALL_BRICK_TORCH_START_1",
    "WALL_BRICK_TORCH_START_2",
    "WALL_BRICK_TORCH_END",
    "WALL_BRICK",
    "WALL_BRICK_1",
    "WALL_BRICK_2",
    "WALL_BRICK_3",
    "WALL_BRICK_4",
    "WALL_BRICK_5",
    "WALL_BRICK_6",
    "WALL_BRICK_7",
    "WALL_BRICK_BLUE",
    "WALL_BRICK_BLUE_1",
    "WALL_BRICK_BLUE_2",
    "WALL_BRICK_BLUE_3",
    "WALL_BRICK_BLUE_4",
    "WALL_BRICK_BLUE_5",
    "WALL_BRICK_BLUE_6",
    "WALL_BRICK_BLUE_7",
    "WALL_BRICK_GREEN",
    "WALL_BRICK_GREEN_1",
    "WALL_BRICK_GREEN_2",
    "WALL_BRICK_GREEN_3",
    "WALL_BRICK_GREEN_4",
    "WALL_BRICK_GREEN_5",
    "WALL_BRICK_GREEN_6",
    "WALL_BRICK_GREEN_7",
    "WALL_BRICK_CYAN",
    "WALL_BRICK_CYAN_1",
    "WALL_BRICK_CYAN_2",
    "WALL_BRICK_CYAN_3",
    "WALL_BRICK_CYAN_4",
    "WALL_BRICK_CYAN_5",
    "WALL_BRICK_CYAN_6",
    "WALL_BRICK_CYAN_7",
    "WALL_BRICK_RED",
    "WALL_BRICK_RED_1",
    "WALL_BRICK_RED_2",
    "WALL_BRICK_RED_3",
    "WALL_BRICK_RED_4",
    "WALL_BRICK_RED_5",
    "WALL_BRICK_RED_6",
    "WALL_BRICK_RED_7",
    "WALL_BRICK_MAGENTA",
    "WALL_BRICK_MAGENTA_1",
    "WALL_BRICK_MAGENTA_2",
    "WALL_BRICK_MAGENTA_3",
    "WALL_BRICK_MAGENTA_4",
    "WALL_BRICK_MAGENTA_5",
    "WALL_BRICK_MAGENTA_6",
    "WALL_BRICK_MAGENTA_7",
    "WALL_BRICK_LIGHTGRAY",
    "WALL_BRICK_LIGHTGRAY_1",
    "WALL_BRICK_LIGHTGRAY_2",
    "WALL_BRICK_LIGHTGRAY_3",
    "WALL_BRICK_LIGHTGRAY_4",
    "WALL_BRICK_LIGHTGRAY_5",
    "WALL_BRICK_LIGHTGRAY_6",
    "WALL_BRICK_LIGHTGRAY_7",
    "WALL_BRICK_DARKGRAY",
    "WALL_BRICK_DARKGRAY_1",
    "WALL_BRICK_DARKGRAY_2",
    "WALL_BRICK_DARKGRAY_3",
    "WALL_BRICK_DARKGRAY_4",
    "WALL_BRICK_DARKGRAY_5",
    "WALL_BRICK_DARKGRAY_6",
    "WALL_BRICK_DARKGRAY_7",
    "WALL_BRICK_LIGHTBLUE",
    "WALL_BRICK_LIGHTBLUE_1",
    "WALL_BRICK_LIGHTBLUE_2",
    "WALL_BRICK_LIGHTBLUE_3",
    "WALL_BRICK_LIGHTBLUE_4",
    "WALL_BRICK_LIGHTBLUE_5",
    "WALL_BRICK_LIGHTBLUE_6",
    "WALL_BRICK_LIGHTBLUE_7",
    "WALL_BRICK_LIGHTGREEN",
    "WALL_BRICK_LIGHTGREEN_1",
    "WALL_BRICK_LIGHTGREEN_2",
    "WALL_BRICK_LIGHTGREEN_3",
    "WALL_BRICK_LIGHTGREEN_4",
    "WALL_BRICK_LIGHTGREEN_5",
    "WALL_BRICK_LIGHTGREEN_6",
    "WALL_BRICK_LIGHTGREEN_7",
    "WALL_BRICK_LIGHTCYAN",
    "WALL_BRICK_LIGHTCYAN_1",
    "WALL_BRICK_LIGHTCYAN_2",
    "WALL_BRICK_LIGHTCYAN_3",
    "WALL_BRICK_LIGHTCYAN_4",
    "WALL_BRICK_LIGHTCYAN_5",
    "WALL_BRICK_LIGHTCYAN_6",
    "WALL_BRICK_LIGHTCYAN_7",
    "WALL_BRICK_LIGHTRED",
    "WALL_BRICK_LIGHTRED_1",
    "WALL_BRICK_LIGHTRED_2",
    "WALL_BRICK_LIGHTRED_3",
    "WALL_BRICK_LIGHTRED_4",
    "WALL_BRICK_LIGHTRED_5",
    "WALL_BRICK_LIGHTRED_6",
    "WALL_BRICK_LIGHTRED_7",
    "WALL_BRICK_LIGHTMAGENTA",
    "WALL_BRICK_LIGHTMAGENTA_1",
    "WALL_BRICK_LIGHTMAGENTA_2",
    "WALL_BRICK_LIGHTMAGENTA_3",
    "WALL_BRICK_LIGHTMAGENTA_4",
    "WALL_BRICK_LIGHTMAGENTA_5",
    "WALL_BRICK_LIGHTMAGENTA_6",
    "WALL_BRICK_LIGHTMAGENTA_7",
    "WALL_BRICK_YELLOW",
    "WALL_BRICK_YELLOW_1",
    "WALL_BRICK_YELLOW_2",
    "WALL_BRICK_YELLOW_3",
    "WALL_BRICK_YELLOW_4",
    "WALL_BRICK_YELLOW_5",
    "WALL_BRICK_YELLOW_6",
    "WALL_BRICK_YELLOW_7",
    "WALL_BRICK_WHITE",
    "WALL_BRICK_WHITE_1",
    "WALL_BRICK_WHITE_2",
    "WALL_BRICK_WHITE_3",
    "WALL_BRICK_WHITE_4",
    "WALL_BRICK_WHITE_5",
    "WALL_BRICK_WHITE_6",
    "WALL_BRICK_WHITE_7",
    "WALL_BRICK_VINES",
    "WALL_BRICK_VINES_1",
    "WALL_BRICK_VINES_2",
    "WALL_BRICK_VINES_3",
    "WALL_HALL",
    "WALL_HALL_1",
    "WALL_HALL_2",
    "WALL_HALL_3",
    "WALL_HALL_WHITE",
    "WALL_HALL_WHITE_1",
    "WALL_HALL_WHITE_2",
    "WALL_HALL_WHITE_3",
    "WALL_HALL_DARKGRAY",
    "WALL_HALL_DARKGRAY_1",
    "WALL_HALL_DARKGRAY_2",
    "WALL_HALL_DARKGRAY_3",
    "WALL_HIVE",
    "WALL_HIVE_1",
    "WALL_HIVE_2",
    "WALL_HIVE_3",
    "WALL_HIVE_4",
    "WALL_HIVE_5",
    "WALL_HIVE_6",
    "WALL_HIVE_7",
    "WALL_HIVE_8",
    "WALL_HIVE_9",
    "WALL_LAIR",
    "WALL_LAIR_1",
    "WALL_LAIR_2",
    "WALL_LAIR_3",
    "WALL_SLIME",
    "WALL_SLIME_1",
    "WALL_SLIME_2",
    "WALL_SLIME_3",
    "WALL_TOMB",
    "WALL_TOMB_1",
    "WALL_TOMB_2",
    "WALL_TOMB_3",
    "WALL_VAULT",
    "WALL_VAULT_1",
    "WALL_VAULT_2",
    "WALL_VAULT_3",
    "WALL_ZOT",
    "WALL_ZOT_1",
    "WALL_ZOT_2",
    "WALL_ZOT_3",
    "WALL_ZOT_GREEN",
    "WALL_ZOT_GREEN_1",
    "WALL_ZOT_GREEN_2",
    "WALL_ZOT_GREEN_3",
    "WALL_ZOT_CYAN",
    "WALL_ZOT_CYAN_1",
    "WALL_ZOT_CYAN_2",
    "WALL_ZOT_CYAN_3",
    "WALL_ZOT_RED",
    "WALL_ZOT_RED_1",
    "WALL_ZOT_RED_2",
    "WALL_ZOT_RED_3",
    "WALL_ZOT_MAGENTA",
    "WALL_ZOT_MAGENTA_1",
    "WALL_ZOT_MAGENTA_2",
    "WALL_ZOT_MAGENTA_3",
    "WALL_ZOT_BROWN",
    "WALL_ZOT_BROWN_1",
    "WALL_ZOT_BROWN_2",
    "WALL_ZOT_BROWN_3",
    "WALL_ZOT_LIGHTGRAY",
    "WALL_ZOT_LIGHTGRAY_1",
    "WALL_ZOT_LIGHTGRAY_2",
    "WALL_ZOT_LIGHTGRAY_3",
    "WALL_ZOT_DARKGRAY",
    "WALL_ZOT_DARKGRAY_1",
    "WALL_ZOT_DARKGRAY_2",
    "WALL_ZOT_DARKGRAY_3",
    "WALL_ZOT_LIGHTBLUE",
    "WALL_ZOT_LIGHTBLUE_1",
    "WALL_ZOT_LIGHTBLUE_2",
    "WALL_ZOT_LIGHTBLUE_3",
    "WALL_ZOT_LIGHTGREEN",
    "WALL_ZOT_LIGHTGREEN_1",
    "WALL_ZOT_LIGHTGREEN_2",
    "WALL_ZOT_LIGHTGREEN_3",
    "WALL_ZOT_LIGHTCYAN",
    "WALL_ZOT_LIGHTCYAN_1",
    "WALL_ZOT_LIGHTCYAN_2",
    "WALL_ZOT_LIGHTCYAN_3",
    "WALL_ZOT_LIGHTRED",
    "WALL_ZOT_LIGHTRED_1",
    "WALL_ZOT_LIGHTRED_2",
    "WALL_ZOT_LIGHTRED_3",
    "WALL_ZOT_LIGHTMAGENTA",
    "WALL_ZOT_LIGHTMAGENTA_1",
    "WALL_ZOT_LIGHTMAGENTA_2",
    "WALL_ZOT_LIGHTMAGENTA_3",
    "WALL_ZOT_YELLOW",
    "WALL_ZOT_YELLOW_1",
    "WALL_ZOT_YELLOW_2",
    "WALL_ZOT_YELLOW_3",
    "WALL_ZOT_WHITE",
    "WALL_ZOT_WHITE_1",
    "WALL_ZOT_WHITE_2",
    "WALL_ZOT_WHITE_3",
    "WALL_FLESH",
    "WALL_FLESH_1",
    "WALL_FLESH_2",
    "WALL_FLESH_3",
    "WALL_FLESH_4",
    "WALL_FLESH_5",
    "WALL_FLESH_6",
    "WALL_TRANSPARENT_FLESH",
    "WALL_TRANSPARENT_FLESH_1",
    "WALL_TRANSPARENT_FLESH_2",
    "WALL_TRANSPARENT_FLESH_3",
    "WALL_TRANSPARENT_FLESH_4",
    "WALL_TRANSPARENT_FLESH_5",
    "WALL_VINES",
    "WALL_VINES_1",
    "WALL_VINES_2",
    "WALL_VINES_3",
    "WALL_VINES_4",
    "WALL_VINES_5",
    "WALL_VINES_6",
    "WALL_PEBBLE",
    "WALL_PEBBLE_1",
    "WALL_PEBBLE_2",
    "WALL_PEBBLE_3",
    "WALL_PEBBLE_BLUE",
    "WALL_PEBBLE_BLUE_1",
    "WALL_PEBBLE_BLUE_2",
    "WALL_PEBBLE_BLUE_3",
    "WALL_PEBBLE_GREEN",
    "WALL_PEBBLE_GREEN_1",
    "WALL_PEBBLE_GREEN_2",
    "WALL_PEBBLE_GREEN_3",
    "WALL_PEBBLE_CYAN",
    "WALL_PEBBLE_CYAN_1",
    "WALL_PEBBLE_CYAN_2",
    "WALL_PEBBLE_CYAN_3",
    "WALL_PEBBLE_MAGENTA",
    "WALL_PEBBLE_MAGENTA_1",
    "WALL_PEBBLE_MAGENTA_2",
    "WALL_PEBBLE_MAGENTA_3",
    "WALL_PEBBLE_BROWN",
    "WALL_PEBBLE_BROWN_1",
    "WALL_PEBBLE_BROWN_2",
    "WALL_PEBBLE_BROWN_3",
    "WALL_PEBBLE_LIGHTGRAY",
    "WALL_PEBBLE_LIGHTGRAY_1",
    "WALL_PEBBLE_LIGHTGRAY_2",
    "WALL_PEBBLE_LIGHTGRAY_3",
    "WALL_PEBBLE_DARKGRAY",
    "WALL_PEBBLE_DARKGRAY_1",
    "WALL_PEBBLE_DARKGRAY_2",
    "WALL_PEBBLE_DARKGRAY_3",
    "WALL_PEBBLE_LIGHTBLUE",
    "WALL_PEBBLE_LIGHTBLUE_1",
    "WALL_PEBBLE_LIGHTBLUE_2",
    "WALL_PEBBLE_LIGHTBLUE_3",
    "WALL_PEBBLE_LIGHTGREEN",
    "WALL_PEBBLE_LIGHTGREEN_1",
    "WALL_PEBBLE_LIGHTGREEN_2",
    "WALL_PEBBLE_LIGHTGREEN_3",
    "WALL_PEBBLE_LIGHTCYAN",
    "WALL_PEBBLE_LIGHTCYAN_1",
    "WALL_PEBBLE_LIGHTCYAN_2",
    "WALL_PEBBLE_LIGHTCYAN_3",
    "WALL_PEBBLE_LIGHTRED",
    "WALL_PEBBLE_LIGHTRED_1",
    "WALL_PEBBLE_LIGHTRED_2",
    "WALL_PEBBLE_LIGHTRED_3",
    "WALL_PEBBLE_LIGHTMAGENTA",
    "WALL_PEBBLE_LIGHTMAGENTA_1",
    "WALL_PEBBLE_LIGHTMAGENTA_2",
    "WALL_PEBBLE_LIGHTMAGENTA_3",
    "WALL_PEBBLE_YELLOW",
    "WALL_PEBBLE_YELLOW_1",
    "WALL_PEBBLE_YELLOW_2",
    "WALL_PEBBLE_YELLOW_3",
    "WALL_PEBBLE_WHITE",
    "WALL_PEBBLE_WHITE_1",
    "WALL_PEBBLE_WHITE_2",
    "WALL_PEBBLE_WHITE_3",
    "WALL_YELLOW_ROCK",
    "WALL_YELLOW_ROCK_1",
    "WALL_YELLOW_ROCK_2",
    "WALL_YELLOW_ROCK_3",
    "WALL_BRICK_GRAY",
    "WALL_BRICK_GRAY_1",
    "WALL_BRICK_GRAY_2",
    "WALL_BRICK_GRAY_3",
    "WALL_STONE_BRICK",
    "WALL_STONE_BRICK_1",
    "WALL_STONE_BRICK_2",
    "WALL_STONE_BRICK_3",
    "WALL_STONE_BRICK_4",
    "WALL_STONE_BRICK_5",
    "WALL_STONE_BRICK_6",
    "WALL_STONE_BRICK_7",
    "WALL_STONE_BRICK_8",
    "WALL_STONE_BRICK_9",
    "WALL_STONE_BRICK_10",
    "WALL_STONE_BRICK_11",
    "WALL_MARBLE",
    "WALL_MARBLE_1",
    "WALL_MARBLE_2",
    "WALL_MARBLE_3",
    "WALL_MARBLE_4",
    "WALL_MARBLE_5",
    "WALL_MARBLE_6",
    "WALL_MARBLE_7",
    "WALL_MARBLE_8",
    "WALL_MARBLE_9",
    "WALL_MARBLE_10",
    "WALL_MARBLE_11",
    "WALL_SANDSTONE",
    "WALL_SANDSTONE_1",
    "WALL_SANDSTONE_2",
    "WALL_SANDSTONE_3",
    "WALL_SANDSTONE_4",
    "WALL_SANDSTONE_5",
    "WALL_SANDSTONE_6",
    "WALL_SANDSTONE_7",
    "WALL_SANDSTONE_8",
    "WALL_SANDSTONE_9",
    "WALL_VOLCANIC",
    "WALL_VOLCANIC_1",
    "WALL_VOLCANIC_2",
    "WALL_VOLCANIC_3",
    "WALL_VOLCANIC_4",
    "WALL_VOLCANIC_5",
    "WALL_VOLCANIC_6",
    "WALL_CRYSTAL_SQUARES",
    "WALL_CRYSTAL_SQUARES_1",
    "WALL_CRYSTAL_SQUARES_2",
    "WALL_CRYSTAL_SQUARES_3",
    "WALL_CRYSTAL_SQUARES_4",
    "WALL_CRYSTAL_SQUARES_5",
    "WALL_CRYSTAL_SQUARES_6",
    "WALL_CRYSTAL_SQUARES_7",
    "WALL_CRYSTAL_SQUARES_8",
    "WALL_CRYSTAL_SQUARES_9",
    "WALL_CRYSTAL_SQUARES_10",
    "WALL_CRYSTAL_SQUARES_11",
    "WALL_CRYSTAL_SQUARES_12",
    "WALL_CRYSTAL_SQUARES_13",
    "WALL_STONE_GRAY",
    "WALL_STONE_GRAY_1",
    "WALL_STONE_GRAY_2",
    "WALL_STONE_GRAY_3",
    "WALL_STONE_WHITE",
    "WALL_STONE_WHITE_1",
    "WALL_STONE_WHITE_2",
    "WALL_STONE_WHITE_3",
    "WALL_STONE_DARK",
    "WALL_STONE_DARK_1",
    "WALL_STONE_DARK_2",
    "WALL_STONE_DARK_3",
    "WALL_STONE_BLACK_MARKED",
    "WALL_STONE_BLACK_MARKED_1",
    "WALL_STONE_BLACK_MARKED_2",
    "WALL_STONE_BLACK_MARKED_3",
    "WALL_STONE_BLACK_MARKED_4",
    "WALL_STONE_BLACK_MARKED_5",
    "WALL_STONE_BLACK_MARKED_6",
    "WALL_STONE_BLACK_MARKED_7",
    "WALL_STONE_BLACK_MARKED_8",
    "WALL_UNDEAD",
    "WALL_UNDEAD_1",
    "WALL_UNDEAD_2",
    "WALL_UNDEAD_3",
    "WALL_CHURCH",
    "WALL_CHURCH_1",
    "WALL_CHURCH_2",
    "WALL_CHURCH_3",
    "DNGN_STONE_WALL",
    "DNGN_STONE_WALL_1",
    "DNGN_STONE_WALL_2",
    "DNGN_STONE_WALL_3",
    "DNGN_STONE_DARK",
    "DNGN_STONE_DARK_1",
    "DNGN_STONE_DARK_2",
    "DNGN_STONE_DARK_3",
    "DNGN_STONE_WALL_BLUE",
    "DNGN_STONE_WALL_BLUE_1",
    "DNGN_STONE_WALL_BLUE_2",
    "DNGN_STONE_WALL_BLUE_3",
    "DNGN_STONE_WALL_GREEN",
    "DNGN_STONE_WALL_GREEN_1",
    "DNGN_STONE_WALL_GREEN_2",
    "DNGN_STONE_WALL_GREEN_3",
    "DNGN_STONE_WALL_CYAN",
    "DNGN_STONE_WALL_CYAN_1",
    "DNGN_STONE_WALL_CYAN_2",
    "DNGN_STONE_WALL_CYAN_3",
    "DNGN_STONE_WALL_RED",
    "DNGN_STONE_WALL_RED_1",
    "DNGN_STONE_WALL_RED_2",
    "DNGN_STONE_WALL_RED_3",
    "DNGN_STONE_WALL_MAGENTA",
    "DNGN_STONE_WALL_MAGENTA_1",
    "DNGN_STONE_WALL_MAGENTA_2",
    "DNGN_STONE_WALL_MAGENTA_3",
    "DNGN_STONE_WALL_BROWN",
    "DNGN_STONE_WALL_BROWN_1",
    "DNGN_STONE_WALL_BROWN_2",
    "DNGN_STONE_WALL_BROWN_3",
    "DNGN_STONE_WALL_DARKGRAY",
    "DNGN_STONE_WALL_DARKGRAY_1",
    "DNGN_STONE_WALL_DARKGRAY_2",
    "DNGN_STONE_WALL_DARKGRAY_3",
    "DNGN_STONE_WALL_YELLOW",
    "DNGN_STONE_WALL_YELLOW_1",
    "DNGN_STONE_WALL_YELLOW_2",
    "DNGN_STONE_WALL_YELLOW_3",
    "DNGN_STONE_WALL_WHITE",
    "DNGN_STONE_WALL_WHITE_1",
    "DNGN_STONE_WALL_WHITE_2",
    "DNGN_STONE_WALL_WHITE_3",
    "DNGN_WAX_WALL",
    "DNGN_TRANSPARENT_WALL",
    "DNGN_TRANSPARENT_WALL_BLUE",
    "DNGN_TRANSPARENT_WALL_GREEN",
    "DNGN_TRANSPARENT_WALL_RED",
    "DNGN_TRANSPARENT_WALL_MAGENTA",
    "DNGN_TRANSPARENT_WALL_BROWN",
    "DNGN_TRANSPARENT_WALL_DARKGRAY",
    "DNGN_TRANSPARENT_WALL_YELLOW",
    "DNGN_TRANSPARENT_WALL_WHITE",
    "DNGN_MIRROR_WALL",
    "DNGN_METAL_WALL",
    "DNGN_METAL_WALL_BLUE",
    "DNGN_METAL_WALL_GREEN",
    "DNGN_METAL_WALL_CYAN",
    "DNGN_METAL_WALL_RED",
    "DNGN_METAL_WALL_MAGENTA",
    "DNGN_METAL_WALL_BROWN",
    "DNGN_METAL_WALL_DARKGRAY",
    "DNGN_METAL_WALL_YELLOW",
    "DNGN_METAL_WALL_WHITE",
    "DNGN_METAL_WALL_CRACKED",
    "DNGN_GRATE",
    "DNGN_GREEN_CRYSTAL_WALL",
    "DNGN_CRYSTAL_BLUE",
    "DNGN_CRYSTAL_CYAN",
    "DNGN_CRYSTAL_RED",
    "DNGN_CRYSTAL_MAGENTA",
    "DNGN_CRYSTAL_BROWN",
    "DNGN_CRYSTAL_LIGHTGRAY",
    "DNGN_CRYSTAL_DARKGRAY",
    "DNGN_CRYSTAL_LIGHTBLUE",
    "DNGN_CRYSTAL_LIGHTGREEN",
    "DNGN_CRYSTAL_LIGHTCYAN",
    "DNGN_CRYSTAL_LIGHTRED",
    "DNGN_CRYSTAL_LIGHTMAGENTA",
    "DNGN_CRYSTAL_YELLOW",
    "DNGN_CRYSTAL_WHITE",
    "DNGN_WALL_SHADOW_W",
    "DNGN_WALL_SHADOW_NW",
    "DNGN_WALL_SHADOW_N",
    "DNGN_WALL_SHADOW_NE",
    "DNGN_WALL_SHADOW_E",
};

const char *tile_wall_name(tileidx_t idx)
{
    assert(idx >= TILE_FLOOR_MAX && idx < TILE_WALL_MAX);
    return _tile_wall_name[idx - TILE_FLOOR_MAX];
}

tile_info _tile_wall_info[TILE_WALL_MAX - TILE_FLOOR_MAX] =
{
    tile_info(32, 32, 0, 0, 0, 0, 32, 32),
    tile_info(32, 32, 0, 0, 32, 0, 64, 32),
    tile_info(32, 32, 0, 0, 64, 0, 96, 32),
    tile_info(32, 32, 0, 0, 96, 0, 128, 32),
    tile_info(32, 32, 0, 0, 128, 0, 160, 32),
    tile_info(32, 32, 0, 0, 160, 0, 192, 32),
    tile_info(32, 32, 0, 0, 192, 0, 224, 32),
    tile_info(32, 32, 0, 0, 224, 0, 256, 32),
    tile_info(32, 32, 0, 0, 256, 0, 288, 32),
    tile_info(32, 32, 0, 0, 288, 0, 320, 32),
    tile_info(32, 32, 0, 0, 320, 0, 352, 32),
    tile_info(32, 32, 0, 0, 352, 0, 384, 32),
    tile_info(32, 32, 0, 0, 384, 0, 416, 32),
    tile_info(32, 32, 0, 0, 416, 0, 448, 32),
    tile_info(32, 32, 0, 0, 448, 0, 480, 32),
    tile_info(32, 32, 0, 0, 480, 0, 512, 32),
    tile_info(32, 32, 0, 0, 512, 0, 544, 32),
    tile_info(32, 32, 0, 0, 544, 0, 576, 32),
    tile_info(32, 32, 0, 0, 576, 0, 608, 32),
    tile_info(32, 32, 0, 0, 608, 0, 640, 32),
    tile_info(32, 32, 0, 0, 640, 0, 672, 32),
    tile_info(32, 32, 0, 0, 672, 0, 704, 32),
    tile_info(32, 32, 0, 0, 704, 0, 736, 32),
    tile_info(32, 32, 0, 0, 736, 0, 768, 32),
    tile_info(32, 32, 0, 0, 768, 0, 800, 32),
    tile_info(32, 32, 0, 0, 800, 0, 832, 32),
    tile_info(32, 32, 0, 0, 832, 0, 864, 32),
    tile_info(32, 32, 0, 0, 864, 0, 896, 32),
    tile_info(32, 32, 0, 0, 896, 0, 928, 32),
    tile_info(32, 32, 0, 0, 928, 0, 960, 32),
    tile_info(32, 32, 0, 0, 960, 0, 992, 32),
    tile_info(32, 32, 0, 0, 992, 0, 1024, 32),
    tile_info(32, 32, 0, 0, 0, 32, 32, 64),
    tile_info(32, 32, 0, 0, 32, 32, 64, 64),
    tile_info(32, 32, 0, 0, 64, 32, 96, 64),
    tile_info(32, 32, 0, 0, 96, 32, 128, 64),
    tile_info(32, 32, 0, 0, 128, 32, 160, 64),
    tile_info(32, 32, 0, 0, 160, 32, 192, 64),
    tile_info(32, 32, 0, 0, 192, 32, 224, 64),
    tile_info(32, 32, 0, 0, 224, 32, 256, 64),
    tile_info(32, 32, 0, 0, 256, 32, 288, 64),
    tile_info(32, 32, 0, 0, 288, 32, 320, 64),
    tile_info(32, 32, 0, 0, 320, 32, 352, 64),
    tile_info(32, 32, 0, 0, 352, 32, 384, 64),
    tile_info(32, 32, 0, 0, 384, 32, 416, 64),
    tile_info(32, 32, 0, 0, 416, 32, 448, 64),
    tile_info(32, 32, 0, 0, 448, 32, 480, 64),
    tile_info(32, 32, 0, 0, 480, 32, 512, 64),
    tile_info(32, 32, 0, 0, 512, 32, 544, 64),
    tile_info(32, 32, 0, 0, 544, 32, 576, 64),
    tile_info(32, 32, 0, 0, 576, 32, 608, 64),
    tile_info(32, 32, 0, 0, 608, 32, 640, 64),
    tile_info(32, 32, 0, 0, 640, 32, 672, 64),
    tile_info(32, 32, 0, 0, 672, 32, 704, 64),
    tile_info(32, 32, 0, 0, 704, 32, 736, 64),
    tile_info(32, 32, 0, 0, 736, 32, 768, 64),
    tile_info(32, 32, 0, 0, 768, 32, 800, 64),
    tile_info(32, 32, 0, 0, 800, 32, 832, 64),
    tile_info(32, 32, 0, 0, 832, 32, 864, 64),
    tile_info(32, 32, 0, 0, 864, 32, 896, 64),
    tile_info(32, 32, 0, 0, 896, 32, 928, 64),
    tile_info(32, 32, 0, 0, 928, 32, 960, 64),
    tile_info(32, 32, 0, 0, 960, 32, 992, 64),
    tile_info(32, 32, 0, 0, 992, 32, 1024, 64),
    tile_info(32, 32, 0, 0, 0, 64, 32, 96),
    tile_info(32, 32, 0, 0, 32, 64, 64, 96),
    tile_info(32, 32, 0, 0, 64, 64, 96, 96),
    tile_info(32, 32, 0, 0, 96, 64, 128, 96),
    tile_info(32, 32, 0, 0, 128, 64, 160, 96),
    tile_info(32, 32, 0, 0, 160, 64, 192, 96),
    tile_info(32, 32, 0, 0, 192, 64, 224, 96),
    tile_info(32, 32, 0, 0, 224, 64, 256, 96),
    tile_info(32, 32, 0, 0, 256, 64, 288, 96),
    tile_info(32, 32, 0, 0, 288, 64, 320, 96),
    tile_info(32, 32, 0, 0, 320, 64, 352, 96),
    tile_info(32, 32, 0, 0, 352, 64, 384, 96),
    tile_info(32, 32, 0, 0, 384, 64, 416, 96),
    tile_info(32, 32, 0, 0, 416, 64, 448, 96),
    tile_info(32, 32, 0, 0, 448, 64, 480, 96),
    tile_info(32, 32, 0, 0, 480, 64, 512, 96),
    tile_info(32, 32, 0, 0, 512, 64, 544, 96),
    tile_info(32, 32, 0, 0, 544, 64, 576, 96),
    tile_info(32, 32, 0, 0, 576, 64, 608, 96),
    tile_info(32, 32, 0, 0, 608, 64, 640, 96),
    tile_info(32, 32, 0, 0, 640, 64, 672, 96),
    tile_info(32, 32, 0, 0, 672, 64, 704, 96),
    tile_info(32, 32, 0, 0, 704, 64, 736, 96),
    tile_info(32, 32, 0, 0, 736, 64, 768, 96),
    tile_info(32, 32, 0, 0, 768, 64, 800, 96),
    tile_info(32, 32, 0, 0, 800, 64, 832, 96),
    tile_info(32, 32, 0, 0, 832, 64, 864, 96),
    tile_info(32, 32, 0, 0, 864, 64, 896, 96),
    tile_info(32, 32, 0, 0, 896, 64, 928, 96),
    tile_info(32, 32, 0, 0, 928, 64, 960, 96),
    tile_info(32, 32, 0, 0, 960, 64, 992, 96),
    tile_info(32, 32, 0, 0, 992, 64, 1024, 96),
    tile_info(32, 32, 0, 0, 0, 96, 32, 128),
    tile_info(32, 32, 0, 0, 32, 96, 64, 128),
    tile_info(32, 32, 0, 0, 64, 96, 96, 128),
    tile_info(32, 32, 0, 0, 96, 96, 128, 128),
    tile_info(32, 32, 0, 0, 128, 96, 160, 128),
    tile_info(32, 32, 0, 0, 160, 96, 192, 128),
    tile_info(32, 32, 0, 0, 192, 96, 224, 128),
    tile_info(32, 32, 0, 0, 224, 96, 256, 128),
    tile_info(32, 32, 0, 0, 256, 96, 288, 128),
    tile_info(32, 32, 0, 0, 288, 96, 320, 128),
    tile_info(32, 32, 0, 0, 320, 96, 352, 128),
    tile_info(32, 32, 0, 0, 352, 96, 384, 128),
    tile_info(32, 32, 0, 0, 384, 96, 416, 128),
    tile_info(32, 32, 0, 0, 416, 96, 448, 128),
    tile_info(32, 32, 0, 0, 448, 96, 480, 128),
    tile_info(32, 32, 0, 0, 480, 96, 512, 128),
    tile_info(32, 32, 0, 0, 512, 96, 544, 128),
    tile_info(32, 32, 0, 0, 544, 96, 576, 128),
    tile_info(32, 32, 0, 0, 576, 96, 608, 128),
    tile_info(32, 32, 0, 0, 608, 96, 640, 128),
    tile_info(32, 32, 0, 0, 640, 96, 672, 128),
    tile_info(32, 32, 0, 0, 672, 96, 704, 128),
    tile_info(32, 32, 0, 0, 704, 96, 736, 128),
    tile_info(32, 32, 0, 0, 736, 96, 768, 128),
    tile_info(32, 32, 0, 0, 768, 96, 800, 128),
    tile_info(32, 32, 0, 0, 800, 96, 832, 128),
    tile_info(32, 32, 0, 0, 832, 96, 864, 128),
    tile_info(32, 32, 0, 0, 864, 96, 896, 128),
    tile_info(32, 32, 0, 0, 896, 96, 928, 128),
    tile_info(32, 32, 0, 0, 928, 96, 960, 128),
    tile_info(32, 32, 0, 0, 960, 96, 992, 128),
    tile_info(32, 32, 0, 0, 992, 96, 1024, 128),
    tile_info(32, 32, 0, 0, 0, 128, 32, 160),
    tile_info(32, 32, 0, 0, 32, 128, 64, 160),
    tile_info(32, 32, 0, 0, 64, 128, 96, 160),
    tile_info(32, 32, 0, 0, 96, 128, 128, 160),
    tile_info(32, 32, 0, 0, 128, 128, 160, 160),
    tile_info(32, 32, 0, 0, 160, 128, 192, 160),
    tile_info(32, 32, 0, 0, 192, 128, 224, 160),
    tile_info(32, 32, 0, 0, 224, 128, 256, 160),
    tile_info(32, 32, 0, 0, 256, 128, 288, 160),
    tile_info(32, 32, 0, 0, 288, 128, 320, 160),
    tile_info(32, 32, 0, 0, 320, 128, 352, 160),
    tile_info(32, 32, 0, 0, 352, 128, 384, 160),
    tile_info(32, 32, 0, 0, 384, 128, 416, 160),
    tile_info(32, 32, 0, 0, 416, 128, 448, 160),
    tile_info(32, 32, 0, 0, 448, 128, 480, 160),
    tile_info(32, 32, 0, 0, 480, 128, 512, 160),
    tile_info(32, 32, 0, 0, 512, 128, 544, 160),
    tile_info(32, 32, 0, 0, 544, 128, 576, 160),
    tile_info(32, 32, 0, 0, 576, 128, 608, 160),
    tile_info(32, 32, 0, 0, 608, 128, 640, 160),
    tile_info(32, 32, 0, 0, 640, 128, 672, 160),
    tile_info(32, 32, 0, 0, 672, 128, 704, 160),
    tile_info(32, 32, 0, 0, 704, 128, 736, 160),
    tile_info(32, 32, 0, 0, 736, 128, 768, 160),
    tile_info(32, 32, 0, 0, 768, 128, 800, 160),
    tile_info(32, 32, 0, 0, 800, 128, 832, 160),
    tile_info(32, 32, 0, 0, 832, 128, 864, 160),
    tile_info(32, 32, 0, 0, 864, 128, 896, 160),
    tile_info(32, 32, 0, 0, 896, 128, 928, 160),
    tile_info(32, 32, 0, 0, 928, 128, 960, 160),
    tile_info(32, 32, 0, 0, 960, 128, 992, 160),
    tile_info(32, 32, 0, 0, 992, 128, 1024, 160),
    tile_info(32, 32, 0, 0, 0, 160, 32, 192),
    tile_info(32, 32, 0, 0, 32, 160, 64, 192),
    tile_info(32, 32, 0, 0, 64, 160, 96, 192),
    tile_info(32, 32, 0, 0, 96, 160, 128, 192),
    tile_info(32, 32, 0, 0, 128, 160, 160, 192),
    tile_info(32, 32, 0, 0, 160, 160, 192, 192),
    tile_info(32, 32, 0, 0, 192, 160, 224, 192),
    tile_info(32, 32, 0, 0, 224, 160, 256, 192),
    tile_info(32, 32, 0, 0, 256, 160, 288, 192),
    tile_info(32, 32, 0, 0, 288, 160, 320, 192),
    tile_info(32, 32, 0, 0, 320, 160, 352, 192),
    tile_info(32, 32, 0, 0, 352, 160, 384, 192),
    tile_info(32, 32, 0, 0, 384, 160, 416, 192),
    tile_info(32, 32, 0, 0, 416, 160, 448, 192),
    tile_info(32, 32, 0, 0, 448, 160, 480, 192),
    tile_info(32, 32, 0, 0, 480, 160, 512, 192),
    tile_info(32, 32, 0, 0, 512, 160, 544, 192),
    tile_info(32, 32, 0, 0, 544, 160, 576, 192),
    tile_info(32, 32, 0, 0, 576, 160, 608, 192),
    tile_info(32, 32, 0, 0, 608, 160, 640, 192),
    tile_info(32, 32, 0, 0, 640, 160, 672, 192),
    tile_info(32, 32, 0, 0, 672, 160, 704, 192),
    tile_info(32, 32, 0, 0, 704, 160, 736, 192),
    tile_info(32, 32, 0, 0, 736, 160, 768, 192),
    tile_info(32, 32, 0, 0, 768, 160, 800, 192),
    tile_info(32, 32, 0, 0, 800, 160, 832, 192),
    tile_info(32, 32, 0, 0, 832, 160, 864, 192),
    tile_info(32, 32, 0, 0, 864, 160, 896, 192),
    tile_info(32, 32, 0, 0, 896, 160, 928, 192),
    tile_info(32, 32, 0, 0, 928, 160, 960, 192),
    tile_info(32, 32, 0, 0, 960, 160, 992, 192),
    tile_info(32, 32, 0, 0, 992, 160, 1024, 192),
    tile_info(32, 32, 0, 0, 0, 192, 32, 224),
    tile_info(32, 32, 0, 0, 32, 192, 64, 224),
    tile_info(32, 32, 0, 0, 64, 192, 96, 224),
    tile_info(32, 32, 0, 0, 96, 192, 128, 224),
    tile_info(32, 32, 0, 0, 128, 192, 160, 224),
    tile_info(32, 32, 0, 0, 160, 192, 192, 224),
    tile_info(32, 32, 0, 0, 192, 192, 224, 224),
    tile_info(32, 32, 0, 0, 224, 192, 256, 224),
    tile_info(32, 32, 0, 0, 256, 192, 288, 224),
    tile_info(32, 32, 0, 0, 288, 192, 320, 224),
    tile_info(32, 32, 0, 0, 320, 192, 352, 224),
    tile_info(32, 32, 0, 0, 352, 192, 384, 224),
    tile_info(32, 32, 0, 0, 384, 192, 416, 224),
    tile_info(32, 32, 0, 0, 416, 192, 448, 224),
    tile_info(32, 32, 0, 0, 448, 192, 480, 224),
    tile_info(32, 32, 0, 0, 480, 192, 512, 224),
    tile_info(32, 32, 0, 0, 512, 192, 544, 224),
    tile_info(32, 32, 0, 0, 544, 192, 576, 224),
    tile_info(32, 32, 0, 0, 576, 192, 608, 224),
    tile_info(32, 32, 0, 0, 608, 192, 640, 224),
    tile_info(32, 32, 0, 0, 640, 192, 672, 224),
    tile_info(32, 32, 0, 0, 672, 192, 704, 224),
    tile_info(32, 32, 0, 0, 704, 192, 736, 224),
    tile_info(32, 32, 0, 0, 736, 192, 768, 224),
    tile_info(32, 32, 0, 0, 768, 192, 800, 224),
    tile_info(32, 32, 0, 0, 800, 192, 832, 224),
    tile_info(32, 32, 0, 0, 832, 192, 864, 224),
    tile_info(32, 32, 0, 0, 864, 192, 896, 224),
    tile_info(32, 32, 0, 0, 896, 192, 928, 224),
    tile_info(32, 32, 0, 0, 928, 192, 960, 224),
    tile_info(32, 32, 0, 0, 960, 192, 992, 224),
    tile_info(32, 32, 0, 0, 992, 192, 1024, 224),
    tile_info(32, 32, 0, 0, 0, 224, 32, 256),
    tile_info(32, 32, 0, 0, 32, 224, 64, 256),
    tile_info(32, 32, 0, 0, 64, 224, 96, 256),
    tile_info(32, 32, 0, 0, 96, 224, 128, 256),
    tile_info(32, 32, 0, 0, 128, 224, 160, 256),
    tile_info(32, 32, 0, 0, 160, 224, 192, 256),
    tile_info(32, 32, 0, 0, 192, 224, 224, 256),
    tile_info(32, 32, 0, 0, 224, 224, 256, 256),
    tile_info(32, 32, 0, 0, 256, 224, 288, 256),
    tile_info(32, 32, 0, 0, 288, 224, 320, 256),
    tile_info(32, 32, 0, 0, 320, 224, 352, 256),
    tile_info(32, 32, 0, 0, 352, 224, 384, 256),
    tile_info(32, 32, 0, 0, 384, 224, 416, 256),
    tile_info(32, 32, 0, 0, 416, 224, 448, 256),
    tile_info(32, 32, 0, 0, 448, 224, 480, 256),
    tile_info(32, 32, 0, 0, 480, 224, 512, 256),
    tile_info(32, 32, 0, 0, 512, 224, 544, 256),
    tile_info(32, 32, 0, 0, 544, 224, 576, 256),
    tile_info(32, 32, 0, 0, 576, 224, 608, 256),
    tile_info(32, 32, 0, 0, 608, 224, 640, 256),
    tile_info(32, 32, 0, 0, 640, 224, 672, 256),
    tile_info(32, 32, 0, 0, 672, 224, 704, 256),
    tile_info(32, 32, 0, 0, 704, 224, 736, 256),
    tile_info(32, 32, 0, 0, 736, 224, 768, 256),
    tile_info(32, 32, 0, 0, 768, 224, 800, 256),
    tile_info(32, 32, 0, 0, 800, 224, 832, 256),
    tile_info(32, 32, 0, 0, 832, 224, 864, 256),
    tile_info(32, 32, 0, 0, 864, 224, 896, 256),
    tile_info(32, 32, 0, 0, 896, 224, 928, 256),
    tile_info(32, 32, 0, 0, 928, 224, 960, 256),
    tile_info(32, 32, 0, 0, 960, 224, 992, 256),
    tile_info(32, 32, 0, 0, 992, 224, 1024, 256),
    tile_info(32, 32, 0, 0, 0, 256, 32, 288),
    tile_info(32, 32, 0, 0, 32, 256, 64, 288),
    tile_info(32, 32, 0, 0, 64, 256, 96, 288),
    tile_info(32, 32, 0, 0, 96, 256, 128, 288),
    tile_info(32, 32, 0, 0, 128, 256, 160, 288),
    tile_info(32, 32, 0, 0, 160, 256, 192, 288),
    tile_info(32, 32, 0, 0, 192, 256, 224, 288),
    tile_info(32, 32, 0, 0, 224, 256, 256, 288),
    tile_info(32, 32, 0, 0, 256, 256, 288, 288),
    tile_info(32, 32, 0, 0, 288, 256, 320, 288),
    tile_info(32, 32, 0, 0, 320, 256, 352, 288),
    tile_info(32, 32, 0, 0, 352, 256, 384, 288),
    tile_info(32, 32, 0, 0, 384, 256, 416, 288),
    tile_info(32, 32, 0, 0, 416, 256, 448, 288),
    tile_info(32, 32, 0, 0, 448, 256, 480, 288),
    tile_info(32, 32, 0, 0, 480, 256, 512, 288),
    tile_info(32, 32, 0, 0, 512, 256, 544, 288),
    tile_info(32, 32, 0, 0, 544, 256, 576, 288),
    tile_info(32, 32, 0, 0, 576, 256, 608, 288),
    tile_info(32, 32, 0, 0, 608, 256, 640, 288),
    tile_info(32, 32, 0, 0, 640, 256, 672, 288),
    tile_info(32, 32, 0, 0, 672, 256, 704, 288),
    tile_info(32, 32, 0, 0, 704, 256, 736, 288),
    tile_info(32, 32, 0, 0, 736, 256, 768, 288),
    tile_info(32, 32, 0, 0, 768, 256, 800, 288),
    tile_info(32, 32, 0, 0, 800, 256, 832, 288),
    tile_info(32, 32, 0, 0, 832, 256, 864, 288),
    tile_info(32, 32, 0, 0, 864, 256, 896, 288),
    tile_info(32, 32, 0, 0, 896, 256, 928, 288),
    tile_info(32, 32, 0, 0, 928, 256, 960, 288),
    tile_info(32, 32, 0, 0, 960, 256, 992, 288),
    tile_info(32, 32, 0, 0, 992, 256, 1024, 288),
    tile_info(32, 32, 0, 0, 0, 288, 32, 320),
    tile_info(32, 32, 0, 0, 32, 288, 64, 320),
    tile_info(32, 32, 0, 0, 64, 288, 96, 320),
    tile_info(32, 32, 0, 0, 96, 288, 128, 320),
    tile_info(32, 32, 0, 0, 128, 288, 160, 320),
    tile_info(32, 32, 0, 0, 160, 288, 192, 320),
    tile_info(32, 32, 0, 0, 192, 288, 224, 320),
    tile_info(32, 32, 0, 0, 224, 288, 256, 320),
    tile_info(32, 32, 0, 0, 256, 288, 288, 320),
    tile_info(32, 32, 0, 0, 288, 288, 320, 320),
    tile_info(32, 32, 0, 0, 320, 288, 352, 320),
    tile_info(32, 32, 0, 0, 352, 288, 384, 320),
    tile_info(32, 32, 0, 0, 384, 288, 416, 320),
    tile_info(32, 32, 0, 0, 416, 288, 448, 320),
    tile_info(32, 32, 0, 0, 448, 288, 480, 320),
    tile_info(32, 32, 0, 0, 480, 288, 512, 320),
    tile_info(32, 32, 0, 0, 512, 288, 544, 320),
    tile_info(32, 32, 0, 0, 544, 288, 576, 320),
    tile_info(32, 32, 0, 0, 576, 288, 608, 320),
    tile_info(32, 32, 0, 0, 608, 288, 640, 320),
    tile_info(32, 32, 0, 0, 640, 288, 672, 320),
    tile_info(32, 32, 0, 0, 672, 288, 704, 320),
    tile_info(32, 32, 0, 0, 704, 288, 736, 320),
    tile_info(32, 32, 0, 0, 736, 288, 768, 320),
    tile_info(32, 32, 0, 0, 768, 288, 800, 320),
    tile_info(32, 32, 0, 0, 800, 288, 832, 320),
    tile_info(32, 32, 0, 0, 832, 288, 864, 320),
    tile_info(32, 32, 0, 0, 864, 288, 896, 320),
    tile_info(32, 32, 0, 0, 896, 288, 928, 320),
    tile_info(32, 32, 0, 0, 928, 288, 960, 320),
    tile_info(32, 32, 0, 0, 960, 288, 992, 320),
    tile_info(32, 32, 0, 0, 992, 288, 1024, 320),
    tile_info(32, 32, 0, 0, 0, 320, 32, 352),
    tile_info(32, 32, 0, 0, 32, 320, 64, 352),
    tile_info(32, 32, 0, 0, 64, 320, 96, 352),
    tile_info(32, 32, 0, 0, 96, 320, 128, 352),
    tile_info(32, 32, 0, 0, 128, 320, 160, 352),
    tile_info(32, 32, 0, 0, 160, 320, 192, 352),
    tile_info(32, 32, 0, 0, 192, 320, 224, 352),
    tile_info(32, 32, 0, 0, 224, 320, 256, 352),
    tile_info(32, 32, 0, 0, 256, 320, 288, 352),
    tile_info(32, 32, 0, 0, 288, 320, 320, 352),
    tile_info(32, 32, 0, 0, 320, 320, 352, 352),
    tile_info(32, 32, 0, 0, 352, 320, 384, 352),
    tile_info(32, 32, 0, 0, 384, 320, 416, 352),
    tile_info(32, 32, 0, 0, 416, 320, 448, 352),
    tile_info(32, 32, 0, 0, 448, 320, 480, 352),
    tile_info(32, 32, 0, 0, 480, 320, 512, 352),
    tile_info(32, 32, 0, 0, 512, 320, 544, 352),
    tile_info(32, 32, 0, 0, 544, 320, 576, 352),
    tile_info(32, 32, 0, 0, 576, 320, 608, 352),
    tile_info(32, 32, 0, 0, 608, 320, 640, 352),
    tile_info(32, 32, 0, 0, 640, 320, 672, 352),
    tile_info(32, 32, 0, 0, 672, 320, 704, 352),
    tile_info(32, 32, 0, 0, 704, 320, 736, 352),
    tile_info(32, 32, 0, 0, 736, 320, 768, 352),
    tile_info(32, 32, 0, 0, 768, 320, 800, 352),
    tile_info(32, 32, 0, 0, 800, 320, 832, 352),
    tile_info(32, 32, 0, 0, 832, 320, 864, 352),
    tile_info(32, 32, 0, 0, 864, 320, 896, 352),
    tile_info(32, 32, 0, 0, 896, 320, 928, 352),
    tile_info(32, 32, 0, 0, 928, 320, 960, 352),
    tile_info(32, 32, 0, 0, 960, 320, 992, 352),
    tile_info(32, 32, 0, 0, 992, 320, 1024, 352),
    tile_info(32, 32, 0, 0, 0, 352, 32, 384),
    tile_info(32, 32, 0, 0, 32, 352, 64, 384),
    tile_info(32, 32, 0, 0, 64, 352, 96, 384),
    tile_info(32, 32, 0, 0, 96, 352, 128, 384),
    tile_info(32, 32, 0, 0, 128, 352, 160, 384),
    tile_info(32, 32, 0, 0, 160, 352, 192, 384),
    tile_info(32, 32, 0, 0, 192, 352, 224, 384),
    tile_info(32, 32, 0, 0, 224, 352, 256, 384),
    tile_info(32, 32, 0, 0, 256, 352, 288, 384),
    tile_info(32, 32, 0, 0, 288, 352, 320, 384),
    tile_info(32, 32, 0, 0, 320, 352, 352, 384),
    tile_info(32, 32, 0, 0, 352, 352, 384, 384),
    tile_info(32, 32, 0, 0, 384, 352, 416, 384),
    tile_info(32, 32, 0, 0, 416, 352, 448, 384),
    tile_info(32, 32, 0, 0, 448, 352, 480, 384),
    tile_info(32, 32, 0, 0, 480, 352, 512, 384),
    tile_info(32, 32, 0, 0, 512, 352, 544, 384),
    tile_info(32, 32, 0, 0, 544, 352, 576, 384),
    tile_info(32, 32, 0, 0, 576, 352, 608, 384),
    tile_info(32, 32, 0, 0, 608, 352, 640, 384),
    tile_info(32, 32, 0, 0, 640, 352, 672, 384),
    tile_info(32, 32, 0, 0, 672, 352, 704, 384),
    tile_info(32, 32, 0, 0, 704, 352, 736, 384),
    tile_info(32, 32, 0, 0, 736, 352, 768, 384),
    tile_info(32, 32, 0, 0, 768, 352, 800, 384),
    tile_info(32, 32, 0, 0, 800, 352, 832, 384),
    tile_info(32, 32, 0, 0, 832, 352, 864, 384),
    tile_info(32, 32, 0, 0, 864, 352, 896, 384),
    tile_info(32, 32, 0, 0, 896, 352, 928, 384),
    tile_info(32, 32, 0, 0, 928, 352, 960, 384),
    tile_info(32, 32, 0, 0, 960, 352, 992, 384),
    tile_info(32, 32, 0, 0, 992, 352, 1024, 384),
    tile_info(32, 32, 0, 0, 0, 384, 32, 416),
    tile_info(32, 32, 0, 0, 32, 384, 64, 416),
    tile_info(32, 32, 0, 0, 64, 384, 96, 416),
    tile_info(32, 32, 0, 0, 96, 384, 128, 416),
    tile_info(32, 32, 0, 0, 128, 384, 160, 416),
    tile_info(32, 32, 0, 0, 160, 384, 192, 416),
    tile_info(32, 32, 0, 0, 192, 384, 224, 416),
    tile_info(32, 32, 0, 0, 224, 384, 256, 416),
    tile_info(32, 32, 0, 0, 256, 384, 288, 416),
    tile_info(32, 32, 0, 0, 288, 384, 320, 416),
    tile_info(32, 32, 0, 0, 320, 384, 352, 416),
    tile_info(32, 32, 0, 0, 352, 384, 384, 416),
    tile_info(32, 32, 0, 0, 384, 384, 416, 416),
    tile_info(32, 32, 0, 0, 416, 384, 448, 416),
    tile_info(32, 32, 0, 0, 448, 384, 480, 416),
    tile_info(32, 32, 0, 0, 480, 384, 512, 416),
    tile_info(32, 32, 0, 0, 512, 384, 544, 416),
    tile_info(32, 32, 0, 0, 544, 384, 576, 416),
    tile_info(32, 32, 0, 0, 576, 384, 608, 416),
    tile_info(32, 32, 0, 0, 608, 384, 640, 416),
    tile_info(32, 32, 0, 0, 640, 384, 672, 416),
    tile_info(32, 32, 0, 0, 672, 384, 704, 416),
    tile_info(32, 32, 0, 0, 704, 384, 736, 416),
    tile_info(32, 32, 0, 0, 736, 384, 768, 416),
    tile_info(32, 32, 0, 0, 768, 384, 800, 416),
    tile_info(32, 32, 0, 0, 800, 384, 832, 416),
    tile_info(32, 32, 0, 0, 832, 384, 864, 416),
    tile_info(32, 32, 0, 0, 864, 384, 896, 416),
    tile_info(32, 32, 0, 0, 896, 384, 928, 416),
    tile_info(32, 32, 0, 0, 928, 384, 960, 416),
    tile_info(32, 32, 0, 0, 960, 384, 992, 416),
    tile_info(32, 32, 0, 0, 992, 384, 1024, 416),
    tile_info(32, 32, 1, 1, 0, 416, 31, 447),
    tile_info(32, 32, 1, 1, 31, 416, 62, 447),
    tile_info(32, 32, 1, 1, 62, 416, 93, 447),
    tile_info(32, 32, 0, 0, 93, 416, 125, 448),
    tile_info(32, 32, 1, 1, 125, 416, 156, 447),
    tile_info(32, 32, 1, 1, 156, 416, 187, 447),
    tile_info(32, 32, 1, 1, 187, 416, 218, 447),
    tile_info(32, 32, 0, 0, 218, 416, 250, 448),
    tile_info(32, 32, 1, 1, 250, 416, 281, 447),
    tile_info(32, 32, 1, 1, 281, 416, 312, 447),
    tile_info(32, 32, 1, 1, 312, 416, 343, 447),
    tile_info(32, 32, 0, 0, 343, 416, 375, 448),
    tile_info(32, 32, 1, 1, 375, 416, 406, 447),
    tile_info(32, 32, 1, 1, 406, 416, 437, 447),
    tile_info(32, 32, 1, 1, 437, 416, 468, 447),
    tile_info(32, 32, 0, 0, 468, 416, 500, 448),
    tile_info(32, 32, 1, 1, 500, 416, 531, 447),
    tile_info(32, 32, 1, 1, 531, 416, 562, 447),
    tile_info(32, 32, 1, 1, 562, 416, 593, 447),
    tile_info(32, 32, 0, 0, 593, 416, 625, 448),
    tile_info(32, 32, 1, 1, 625, 416, 656, 447),
    tile_info(32, 32, 1, 1, 656, 416, 687, 447),
    tile_info(32, 32, 1, 1, 687, 416, 718, 447),
    tile_info(32, 32, 0, 0, 718, 416, 750, 448),
    tile_info(32, 32, 0, 0, 750, 416, 782, 448),
    tile_info(32, 32, 0, 0, 782, 416, 814, 448),
    tile_info(32, 32, 0, 0, 814, 416, 846, 448),
    tile_info(32, 32, 0, 0, 846, 416, 878, 448),
    tile_info(32, 32, 1, 1, 878, 416, 909, 447),
    tile_info(32, 32, 1, 1, 909, 416, 940, 447),
    tile_info(32, 32, 1, 1, 940, 416, 971, 447),
    tile_info(32, 32, 0, 0, 971, 416, 1003, 448),
    tile_info(32, 32, 0, 0, 0, 448, 32, 480),
    tile_info(32, 32, 0, 0, 32, 448, 64, 480),
    tile_info(32, 32, 0, 0, 64, 448, 96, 480),
    tile_info(32, 32, 0, 0, 96, 448, 128, 480),
    tile_info(32, 32, 0, 0, 128, 448, 160, 480),
    tile_info(32, 32, 0, 0, 160, 448, 192, 480),
    tile_info(32, 32, 0, 0, 192, 448, 224, 480),
    tile_info(32, 32, 0, 0, 224, 448, 256, 480),
    tile_info(32, 32, 0, 0, 256, 448, 288, 480),
    tile_info(32, 32, 0, 0, 288, 448, 320, 480),
    tile_info(32, 32, 0, 0, 320, 448, 352, 480),
    tile_info(32, 32, 0, 0, 352, 448, 384, 480),
    tile_info(32, 32, 0, 0, 384, 448, 416, 480),
    tile_info(32, 32, 0, 0, 416, 448, 448, 480),
    tile_info(32, 32, 0, 0, 448, 448, 480, 480),
    tile_info(32, 32, 0, 0, 480, 448, 512, 480),
    tile_info(32, 32, 0, 0, 512, 448, 544, 480),
    tile_info(32, 32, 0, 0, 544, 448, 576, 480),
    tile_info(32, 32, 0, 0, 576, 448, 608, 480),
    tile_info(32, 32, 0, 0, 608, 448, 640, 480),
    tile_info(32, 32, 0, 0, 640, 448, 672, 480),
    tile_info(32, 32, 0, 0, 672, 448, 704, 480),
    tile_info(32, 32, 0, 0, 704, 448, 736, 480),
    tile_info(32, 32, 0, 0, 736, 448, 768, 480),
    tile_info(32, 32, 0, 0, 768, 448, 800, 480),
    tile_info(32, 32, 0, 0, 800, 448, 832, 480),
    tile_info(32, 32, 0, 0, 832, 448, 864, 480),
    tile_info(32, 32, 0, 0, 864, 448, 896, 480),
    tile_info(32, 32, 0, 0, 896, 448, 928, 480),
    tile_info(32, 32, 0, 0, 928, 448, 960, 480),
    tile_info(32, 32, 0, 0, 960, 448, 992, 480),
    tile_info(32, 32, 0, 0, 992, 448, 1024, 480),
    tile_info(32, 32, 0, 0, 0, 480, 32, 512),
    tile_info(32, 32, 0, 0, 32, 480, 64, 512),
    tile_info(32, 32, 0, 0, 64, 480, 96, 512),
    tile_info(32, 32, 0, 0, 96, 480, 128, 512),
    tile_info(32, 32, 0, 0, 128, 480, 160, 512),
    tile_info(32, 32, 0, 0, 160, 480, 192, 512),
    tile_info(32, 32, 0, 0, 192, 480, 224, 512),
    tile_info(32, 32, 0, 0, 224, 480, 256, 512),
    tile_info(32, 32, 0, 0, 256, 480, 288, 512),
    tile_info(32, 32, 0, 0, 288, 480, 291, 512),
    tile_info(32, 32, 0, 0, 291, 480, 294, 485),
    tile_info(32, 32, 0, 0, 291, 485, 323, 490),
    tile_info(32, 32, 29, 0, 291, 490, 294, 494),
    tile_info(32, 32, 29, 0, 323, 480, 326, 512),
};

tile_info &tile_wall_info(tileidx_t idx)
{
    assert(idx >= TILE_FLOOR_MAX && idx < TILE_WALL_MAX);
    return _tile_wall_info[idx - TILE_FLOOR_MAX];
}


typedef std::pair<const char*, tileidx_t> _name_pair;

_name_pair wall_name_pairs[] =
{
    _name_pair("dngn_crystal", 474 + TILE_FLOOR_MAX),
    _name_pair("dngn_crystal_blue", 475 + TILE_FLOOR_MAX),
    _name_pair("dngn_crystal_brown", 479 + TILE_FLOOR_MAX),
    _name_pair("dngn_crystal_cyan", 476 + TILE_FLOOR_MAX),
    _name_pair("dngn_crystal_darkgray", 481 + TILE_FLOOR_MAX),
    _name_pair("dngn_crystal_green", 474 + TILE_FLOOR_MAX),
    _name_pair("dngn_crystal_lightblue", 482 + TILE_FLOOR_MAX),
    _name_pair("dngn_crystal_lightcyan", 484 + TILE_FLOOR_MAX),
    _name_pair("dngn_crystal_lightgray", 480 + TILE_FLOOR_MAX),
    _name_pair("dngn_crystal_lightgreen", 483 + TILE_FLOOR_MAX),
    _name_pair("dngn_crystal_lightmagenta", 486 + TILE_FLOOR_MAX),
    _name_pair("dngn_crystal_lightred", 485 + TILE_FLOOR_MAX),
    _name_pair("dngn_crystal_magenta", 478 + TILE_FLOOR_MAX),
    _name_pair("dngn_crystal_red", 477 + TILE_FLOOR_MAX),
    _name_pair("dngn_crystal_white", 488 + TILE_FLOOR_MAX),
    _name_pair("dngn_crystal_yellow", 487 + TILE_FLOOR_MAX),
    _name_pair("dngn_grate", 473 + TILE_FLOOR_MAX),
    _name_pair("dngn_green_crystal_wall", 474 + TILE_FLOOR_MAX),
    _name_pair("dngn_metal_wall", 462 + TILE_FLOOR_MAX),
    _name_pair("dngn_metal_wall_blue", 463 + TILE_FLOOR_MAX),
    _name_pair("dngn_metal_wall_brown", 468 + TILE_FLOOR_MAX),
    _name_pair("dngn_metal_wall_cracked", 472 + TILE_FLOOR_MAX),
    _name_pair("dngn_metal_wall_cyan", 465 + TILE_FLOOR_MAX),
    _name_pair("dngn_metal_wall_darkgray", 469 + TILE_FLOOR_MAX),
    _name_pair("dngn_metal_wall_green", 464 + TILE_FLOOR_MAX),
    _name_pair("dngn_metal_wall_magenta", 467 + TILE_FLOOR_MAX),
    _name_pair("dngn_metal_wall_red", 466 + TILE_FLOOR_MAX),
    _name_pair("dngn_metal_wall_white", 471 + TILE_FLOOR_MAX),
    _name_pair("dngn_metal_wall_yellow", 470 + TILE_FLOOR_MAX),
    _name_pair("dngn_mirror_wall", 461 + TILE_FLOOR_MAX),
    _name_pair("dngn_stone_dark", 411 + TILE_FLOOR_MAX),
    _name_pair("dngn_stone_wall", 407 + TILE_FLOOR_MAX),
    _name_pair("dngn_stone_wall_blue", 415 + TILE_FLOOR_MAX),
    _name_pair("dngn_stone_wall_brown", 435 + TILE_FLOOR_MAX),
    _name_pair("dngn_stone_wall_cyan", 423 + TILE_FLOOR_MAX),
    _name_pair("dngn_stone_wall_darkgray", 439 + TILE_FLOOR_MAX),
    _name_pair("dngn_stone_wall_green", 419 + TILE_FLOOR_MAX),
    _name_pair("dngn_stone_wall_lightgray", 407 + TILE_FLOOR_MAX),
    _name_pair("dngn_stone_wall_magenta", 431 + TILE_FLOOR_MAX),
    _name_pair("dngn_stone_wall_red", 427 + TILE_FLOOR_MAX),
    _name_pair("dngn_stone_wall_white", 447 + TILE_FLOOR_MAX),
    _name_pair("dngn_stone_wall_yellow", 443 + TILE_FLOOR_MAX),
    _name_pair("dngn_transparen_wall_cyan", 452 + TILE_FLOOR_MAX),
    _name_pair("dngn_transparent_wall", 452 + TILE_FLOOR_MAX),
    _name_pair("dngn_transparent_wall_blue", 453 + TILE_FLOOR_MAX),
    _name_pair("dngn_transparent_wall_brown", 457 + TILE_FLOOR_MAX),
    _name_pair("dngn_transparent_wall_darkgray", 458 + TILE_FLOOR_MAX),
    _name_pair("dngn_transparent_wall_green", 454 + TILE_FLOOR_MAX),
    _name_pair("dngn_transparent_wall_magenta", 456 + TILE_FLOOR_MAX),
    _name_pair("dngn_transparent_wall_red", 455 + TILE_FLOOR_MAX),
    _name_pair("dngn_transparent_wall_white", 460 + TILE_FLOOR_MAX),
    _name_pair("dngn_transparent_wall_yellow", 459 + TILE_FLOOR_MAX),
    _name_pair("dngn_wall_shadow_e", 493 + TILE_FLOOR_MAX),
    _name_pair("dngn_wall_shadow_n", 491 + TILE_FLOOR_MAX),
    _name_pair("dngn_wall_shadow_ne", 492 + TILE_FLOOR_MAX),
    _name_pair("dngn_wall_shadow_nw", 490 + TILE_FLOOR_MAX),
    _name_pair("dngn_wall_shadow_w", 489 + TILE_FLOOR_MAX),
    _name_pair("dngn_wax_wall", 451 + TILE_FLOOR_MAX),
    _name_pair("wall_brick", 13 + TILE_FLOOR_MAX),
    _name_pair("wall_brick_blue", 21 + TILE_FLOOR_MAX),
    _name_pair("wall_brick_brown", 13 + TILE_FLOOR_MAX),
    _name_pair("wall_brick_brown_vines", 133 + TILE_FLOOR_MAX),
    _name_pair("wall_brick_cyan", 37 + TILE_FLOOR_MAX),
    _name_pair("wall_brick_dark", 0 + TILE_FLOOR_MAX),
    _name_pair("wall_brick_darkgray", 69 + TILE_FLOOR_MAX),
    _name_pair("wall_brick_gray", 319 + TILE_FLOOR_MAX),
    _name_pair("wall_brick_green", 29 + TILE_FLOOR_MAX),
    _name_pair("wall_brick_lightblue", 77 + TILE_FLOOR_MAX),
    _name_pair("wall_brick_lightcyan", 93 + TILE_FLOOR_MAX),
    _name_pair("wall_brick_lightgray", 61 + TILE_FLOOR_MAX),
    _name_pair("wall_brick_lightgreen", 85 + TILE_FLOOR_MAX),
    _name_pair("wall_brick_lightmagenta", 109 + TILE_FLOOR_MAX),
    _name_pair("wall_brick_lightred", 101 + TILE_FLOOR_MAX),
    _name_pair("wall_brick_magenta", 53 + TILE_FLOOR_MAX),
    _name_pair("wall_brick_red", 45 + TILE_FLOOR_MAX),
    _name_pair("wall_brick_torch_end", 12 + TILE_FLOOR_MAX),
    _name_pair("wall_brick_torch_start", 9 + TILE_FLOOR_MAX),
    _name_pair("wall_brick_vines", 133 + TILE_FLOOR_MAX),
    _name_pair("wall_brick_white", 125 + TILE_FLOOR_MAX),
    _name_pair("wall_brick_yellow", 117 + TILE_FLOOR_MAX),
    _name_pair("wall_church", 403 + TILE_FLOOR_MAX),
    _name_pair("wall_crystal_squares", 364 + TILE_FLOOR_MAX),
    _name_pair("wall_flesh", 235 + TILE_FLOOR_MAX),
    _name_pair("wall_hall", 137 + TILE_FLOOR_MAX),
    _name_pair("wall_hall_darkgray", 145 + TILE_FLOOR_MAX),
    _name_pair("wall_hall_white", 141 + TILE_FLOOR_MAX),
    _name_pair("wall_hive", 149 + TILE_FLOOR_MAX),
    _name_pair("wall_ice", 183 + TILE_FLOOR_MAX),
    _name_pair("wall_lair", 159 + TILE_FLOOR_MAX),
    _name_pair("wall_marble", 335 + TILE_FLOOR_MAX),
    _name_pair("wall_normal", 0 + TILE_FLOOR_MAX),
    _name_pair("wall_orc", 159 + TILE_FLOOR_MAX),
    _name_pair("wall_pebble", 255 + TILE_FLOOR_MAX),
    _name_pair("wall_pebble_blue", 259 + TILE_FLOOR_MAX),
    _name_pair("wall_pebble_brown", 275 + TILE_FLOOR_MAX),
    _name_pair("wall_pebble_cyan", 267 + TILE_FLOOR_MAX),
    _name_pair("wall_pebble_darkgray", 283 + TILE_FLOOR_MAX),
    _name_pair("wall_pebble_green", 263 + TILE_FLOOR_MAX),
    _name_pair("wall_pebble_lightblue", 287 + TILE_FLOOR_MAX),
    _name_pair("wall_pebble_lightcyan", 295 + TILE_FLOOR_MAX),
    _name_pair("wall_pebble_lightgray", 279 + TILE_FLOOR_MAX),
    _name_pair("wall_pebble_lightgreen", 291 + TILE_FLOOR_MAX),
    _name_pair("wall_pebble_lightmagenta", 303 + TILE_FLOOR_MAX),
    _name_pair("wall_pebble_lightred", 299 + TILE_FLOOR_MAX),
    _name_pair("wall_pebble_magenta", 271 + TILE_FLOOR_MAX),
    _name_pair("wall_pebble_red", 255 + TILE_FLOOR_MAX),
    _name_pair("wall_pebble_white", 311 + TILE_FLOOR_MAX),
    _name_pair("wall_pebble_yellow", 307 + TILE_FLOOR_MAX),
    _name_pair("wall_sandstone", 347 + TILE_FLOOR_MAX),
    _name_pair("wall_slime", 163 + TILE_FLOOR_MAX),
    _name_pair("wall_snake", 29 + TILE_FLOOR_MAX),
    _name_pair("wall_stone_black_marked", 390 + TILE_FLOOR_MAX),
    _name_pair("wall_stone_brick", 323 + TILE_FLOOR_MAX),
    _name_pair("wall_stone_dark", 386 + TILE_FLOOR_MAX),
    _name_pair("wall_stone_gray", 378 + TILE_FLOOR_MAX),
    _name_pair("wall_stone_white", 382 + TILE_FLOOR_MAX),
    _name_pair("wall_swamp", 159 + TILE_FLOOR_MAX),
    _name_pair("wall_tomb", 167 + TILE_FLOOR_MAX),
    _name_pair("wall_transparent_flesh", 242 + TILE_FLOOR_MAX),
    _name_pair("wall_undead", 399 + TILE_FLOOR_MAX),
    _name_pair("wall_vault", 171 + TILE_FLOOR_MAX),
    _name_pair("wall_vines", 248 + TILE_FLOOR_MAX),
    _name_pair("wall_volcanic", 357 + TILE_FLOOR_MAX),
    _name_pair("wall_yellow_rock", 315 + TILE_FLOOR_MAX),
    _name_pair("wall_zot", 175 + TILE_FLOOR_MAX),
    _name_pair("wall_zot_blue", 175 + TILE_FLOOR_MAX),
    _name_pair("wall_zot_brown", 195 + TILE_FLOOR_MAX),
    _name_pair("wall_zot_cyan", 183 + TILE_FLOOR_MAX),
    _name_pair("wall_zot_darkgray", 203 + TILE_FLOOR_MAX),
    _name_pair("wall_zot_green", 179 + TILE_FLOOR_MAX),
    _name_pair("wall_zot_lightblue", 207 + TILE_FLOOR_MAX),
    _name_pair("wall_zot_lightcyan", 215 + TILE_FLOOR_MAX),
    _name_pair("wall_zot_lightgray", 199 + TILE_FLOOR_MAX),
    _name_pair("wall_zot_lightgreen", 211 + TILE_FLOOR_MAX),
    _name_pair("wall_zot_lightmagenta", 223 + TILE_FLOOR_MAX),
    _name_pair("wall_zot_lightred", 219 + TILE_FLOOR_MAX),
    _name_pair("wall_zot_magenta", 191 + TILE_FLOOR_MAX),
    _name_pair("wall_zot_red", 187 + TILE_FLOOR_MAX),
    _name_pair("wall_zot_white", 231 + TILE_FLOOR_MAX),
    _name_pair("wall_zot_yellow", 227 + TILE_FLOOR_MAX),
};

bool tile_wall_index(const char *str, tileidx_t *idx)
{
    assert(str);
    if (!str)
        return false;

    string lc = str;
    for (unsigned int i = 0; i < lc.size(); i++)
        lc[i] = tolower(lc[i]);

    int num_pairs = sizeof(wall_name_pairs) / sizeof(wall_name_pairs[0]);
    bool result = binary_search<const char *, tileidx_t>(
       lc.c_str(), &wall_name_pairs[0], num_pairs, &strcmp, idx);
    return (result);
}

bool tile_wall_equal(tileidx_t tile, tileidx_t idx)
{
    assert(tile >= TILE_FLOOR_MAX && tile < TILE_WALL_MAX);
    return (idx >= tile && idx < tile + tile_wall_count(tile));
}


typedef std::pair<tile_variation, tileidx_t> _colour_pair;

_colour_pair wall_colour_pairs[] =
{
    _colour_pair(tile_variation(0, 0), 0),
    _colour_pair(tile_variation(13 + TILE_FLOOR_MAX, 1), 21 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(13 + TILE_FLOOR_MAX, 2), 29 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(13 + TILE_FLOOR_MAX, 3), 37 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(13 + TILE_FLOOR_MAX, 4), 45 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(13 + TILE_FLOOR_MAX, 5), 53 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(13 + TILE_FLOOR_MAX, 7), 61 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(13 + TILE_FLOOR_MAX, 8), 69 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(13 + TILE_FLOOR_MAX, 9), 77 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(13 + TILE_FLOOR_MAX, 10), 85 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(13 + TILE_FLOOR_MAX, 11), 93 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(13 + TILE_FLOOR_MAX, 12), 101 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(13 + TILE_FLOOR_MAX, 13), 109 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(13 + TILE_FLOOR_MAX, 14), 117 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(13 + TILE_FLOOR_MAX, 15), 125 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(137 + TILE_FLOOR_MAX, 8), 145 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(137 + TILE_FLOOR_MAX, 15), 141 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(175 + TILE_FLOOR_MAX, 2), 179 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(175 + TILE_FLOOR_MAX, 3), 183 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(175 + TILE_FLOOR_MAX, 4), 187 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(175 + TILE_FLOOR_MAX, 5), 191 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(175 + TILE_FLOOR_MAX, 6), 195 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(175 + TILE_FLOOR_MAX, 7), 199 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(175 + TILE_FLOOR_MAX, 8), 203 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(175 + TILE_FLOOR_MAX, 9), 207 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(175 + TILE_FLOOR_MAX, 10), 211 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(175 + TILE_FLOOR_MAX, 11), 215 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(175 + TILE_FLOOR_MAX, 12), 219 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(175 + TILE_FLOOR_MAX, 13), 223 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(175 + TILE_FLOOR_MAX, 14), 227 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(175 + TILE_FLOOR_MAX, 15), 231 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(255 + TILE_FLOOR_MAX, 1), 259 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(255 + TILE_FLOOR_MAX, 2), 263 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(255 + TILE_FLOOR_MAX, 3), 267 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(255 + TILE_FLOOR_MAX, 5), 271 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(255 + TILE_FLOOR_MAX, 6), 275 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(255 + TILE_FLOOR_MAX, 7), 279 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(255 + TILE_FLOOR_MAX, 8), 283 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(255 + TILE_FLOOR_MAX, 9), 287 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(255 + TILE_FLOOR_MAX, 10), 291 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(255 + TILE_FLOOR_MAX, 11), 295 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(255 + TILE_FLOOR_MAX, 12), 299 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(255 + TILE_FLOOR_MAX, 13), 303 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(255 + TILE_FLOOR_MAX, 14), 307 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(255 + TILE_FLOOR_MAX, 15), 311 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(378 + TILE_FLOOR_MAX, 15), 382 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(407 + TILE_FLOOR_MAX, 1), 415 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(407 + TILE_FLOOR_MAX, 2), 419 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(407 + TILE_FLOOR_MAX, 3), 423 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(407 + TILE_FLOOR_MAX, 4), 427 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(407 + TILE_FLOOR_MAX, 5), 431 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(407 + TILE_FLOOR_MAX, 6), 435 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(407 + TILE_FLOOR_MAX, 8), 439 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(407 + TILE_FLOOR_MAX, 14), 443 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(407 + TILE_FLOOR_MAX, 15), 447 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(452 + TILE_FLOOR_MAX, 1), 453 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(452 + TILE_FLOOR_MAX, 2), 454 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(452 + TILE_FLOOR_MAX, 4), 455 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(452 + TILE_FLOOR_MAX, 5), 456 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(452 + TILE_FLOOR_MAX, 6), 457 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(452 + TILE_FLOOR_MAX, 8), 458 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(452 + TILE_FLOOR_MAX, 14), 459 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(452 + TILE_FLOOR_MAX, 15), 460 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(462 + TILE_FLOOR_MAX, 1), 463 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(462 + TILE_FLOOR_MAX, 2), 464 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(462 + TILE_FLOOR_MAX, 3), 465 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(462 + TILE_FLOOR_MAX, 4), 466 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(462 + TILE_FLOOR_MAX, 5), 467 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(462 + TILE_FLOOR_MAX, 6), 468 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(462 + TILE_FLOOR_MAX, 8), 469 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(462 + TILE_FLOOR_MAX, 14), 470 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(462 + TILE_FLOOR_MAX, 15), 471 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(474 + TILE_FLOOR_MAX, 1), 475 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(474 + TILE_FLOOR_MAX, 3), 476 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(474 + TILE_FLOOR_MAX, 4), 477 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(474 + TILE_FLOOR_MAX, 5), 478 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(474 + TILE_FLOOR_MAX, 6), 479 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(474 + TILE_FLOOR_MAX, 7), 480 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(474 + TILE_FLOOR_MAX, 8), 481 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(474 + TILE_FLOOR_MAX, 9), 482 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(474 + TILE_FLOOR_MAX, 10), 483 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(474 + TILE_FLOOR_MAX, 11), 484 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(474 + TILE_FLOOR_MAX, 12), 485 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(474 + TILE_FLOOR_MAX, 13), 486 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(474 + TILE_FLOOR_MAX, 14), 487 + TILE_FLOOR_MAX),
    _colour_pair(tile_variation(474 + TILE_FLOOR_MAX, 15), 488 + TILE_FLOOR_MAX),
};

tileidx_t tile_wall_coloured(tileidx_t idx, int col)
{
    int num_pairs = sizeof(wall_colour_pairs) / sizeof(wall_colour_pairs[0]);
    tile_variation key(idx, col);
    tileidx_t found;
    bool result = binary_search<tile_variation, tileidx_t>(
       key, &wall_colour_pairs[0], num_pairs,
       &tile_variation::cmp, &found);
    return (result ? found : idx);
}

